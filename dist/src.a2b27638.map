{"version":3,"sources":["node_modules/sbd/lib/sanitize-html-browser.js","node_modules/sbd/lib/stringHelper.js","node_modules/sbd/lib/Match.js","node_modules/sbd/lib/tokenizer.js","src/functions.js","src/editor/empty.js","src/editor/terminate.js","src/editor/htmlToStringArray.js","src/editor/arrayToHtml.js","src/editor/index.js","node_modules/deep-is/index.js","src/utilities/uuid.js","src/utilities/inflate.js","src/utilities/index.js","src/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["dispatch","name","message","elm","window","e","CustomEvent","Object","assign","bubbles","detail","dispatchEvent","subscribe","callback","addEventListener","empty","s","undefined","re_punctuation","terminate","text","autoTerminate","trim","is_closed","test","sufix","settings","require","htmlToStringArray","children","options","prefixToken","className","map","el","innerText","classList","is_comment","contains","prefix","comment","RegExp","arrayToHtml","array","value","replace","join","toString","editor","config","defaultConfig","cache","candidate","versions","re_comments","console","log","triggerDictionary","cleanup","cleanupBlanks","shiftshift","toggleComment","getCandidateString","is_array","constructor","Array","textToArray","line","filter","length","split","clearVersions","innerHTML","load","initialize","html","bool","document","getSelection","focusNode","parentNode","skip","nodeName","toggle","rows","forEach","row","n","remove","executeTriggers","keyTime","keyHistory","toLowerCase","trigger","notifyChanges","bindEvents","ts","hist","onkeyup","doubleTap","resetDelay","diff","timeStamp","delay","push","key","slice","setTimeout","getVersionArray","onChange","nextCandidate","String","nextVersions","a","b","execute","sort","addOnChange","fn","id","selector","querySelector","clear","serial","uuid","Date","valueOf","Math","floor","random","inflate","SBD","sentences","time","storage","ns","val","read","data","localStorage","JSON","parse","write","obj","clearTimeout","timer","count","stringify","deepEqual","$focusOn","messages","confirmDelete","$doc","dataset","ondblclick","target","u","confirm","add","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","exports","bundle","updateLink","link","newLink","cloneNode","onload","href","now","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","i","module"],"mappings":"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","file":"src.a2b27638.map","sourceRoot":"..","sourcesContent":["\r\nmodule.exports = function sanitizeHtml(text, opts) {\r\n  // Strip HTML from Text using browser HTML parser\r\n  if ((typeof text == 'string' || text instanceof String) && typeof document !== \"undefined\") {\r\n    var $div = document.createElement(\"DIV\");\r\n    $div.innerHTML = text;\r\n    text = ($div.textContent || '').trim();\r\n  }\r\n  //DOM Object\r\n  else if (typeof text === 'object' && text.textContent) {\r\n    text = (text.textContent || '').trim();\r\n  }\r\n\r\n  return text;\r\n};\r\n","\r\nexports.endsWithChar = function ends_with_char(word, c) {\r\n    if (c.length > 1) {\r\n        return c.indexOf(word.slice(-1)) > -1;\r\n    }\r\n\r\n    return word.slice(-1) === c;\r\n};\r\n\r\nexports.endsWith = function ends_with(word, end) {\r\n    return word.slice(word.length - end.length) === end;\r\n};","var abbreviations;\r\nvar englishAbbreviations = [\r\n    \"al\",\r\n    \"adj\",\r\n    \"assn\",\r\n    \"Ave\",\r\n    \"BSc\", \"MSc\",\r\n    \"Cell\",\r\n    \"Ch\",\r\n    \"Co\",\r\n    \"cc\",\r\n    \"Corp\",\r\n    \"Dem\",\r\n    \"Dept\",\r\n    \"ed\",\r\n    \"eg\",\r\n    \"Eq\",\r\n    \"Eqs\",\r\n    \"est\",\r\n    \"est\",\r\n    \"etc\",\r\n    \"Ex\",\r\n    \"ext\", // + number?\r\n    \"Fig\",\r\n    \"fig\",\r\n    \"Figs\",\r\n    \"figs\",\r\n    \"i.e\",\r\n    \"ie\",\r\n    \"Inc\",\r\n    \"inc\",\r\n    \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Sept\",\"Oct\",\"Nov\",\"Dec\",\r\n    \"jr\",\r\n    \"mi\",\r\n    \"Miss\", \"Mrs\", \"Mr\", \"Ms\",\r\n    \"Mol\",\r\n    \"mt\",\r\n    \"mts\",\r\n    \"no\",\r\n    \"Nos\",\r\n    \"PhD\", \"MD\", \"BA\", \"MA\", \"MM\",\r\n    \"pl\",\r\n    \"pop\",\r\n    \"pp\",\r\n    \"Prof\", \"Dr\",\r\n    \"pt\",\r\n    \"Ref\",\r\n    \"Refs\",\r\n    \"Rep\",\r\n    \"repr\",\r\n    \"rev\",\r\n    \"Sec\",\r\n    \"Secs\",\r\n    \"Sgt\", \"Col\", \"Gen\", \"Rep\", \"Sen\",'Gov', \"Lt\", \"Maj\", \"Capt\",\"St\",\r\n    \"Sr\", \"sr\", \"Jr\", \"jr\", \"Rev\",\r\n    \"Sun\",\"Mon\",\"Tu\",\"Tue\",\"Tues\",\"Wed\",\"Th\",\"Thu\",\"Thur\",\"Thurs\",\"Fri\",\"Sat\",\r\n    \"trans\",\r\n    \"Univ\",\r\n    \"Viz\",\r\n    \"Vol\",\r\n    \"vs\",\r\n    \"v\",\r\n];\r\n\r\nexports.setAbbreviations = function(abbr) {\r\n    if(abbr){\r\n        abbreviations = abbr;\r\n    } else {\r\n        abbreviations = englishAbbreviations;\r\n    }\r\n}\r\n\r\nvar isCapitalized = exports.isCapitalized = function(str) {\r\n    return /^[A-Z][a-z].*/.test(str) || isNumber(str);\r\n}\r\n\r\n// Start with opening quotes or capitalized letter\r\nexports.isSentenceStarter = function(str) {\r\n    return isCapitalized(str) || /``|\"|'/.test(str.substring(0,2));\r\n}\r\n\r\nexports.isCommonAbbreviation = function(str) {\r\n    return ~abbreviations.indexOf(str.replace(/\\W+/g, ''));\r\n}\r\n\r\n// This is going towards too much rule based\r\nexports.isTimeAbbreviation = function(word, next) {\r\n    if (word === \"a.m.\" || word === \"p.m.\") {\r\n        var tmp = next.replace(/\\W+/g, '').slice(-3).toLowerCase();\r\n\r\n        if (tmp === \"day\") {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexports.isDottedAbbreviation = function(word) {\r\n    var matches = word.replace(/[\\(\\)\\[\\]\\{\\}]/g, '').match(/(.\\.)*/);\r\n    return matches && matches[0].length > 0;\r\n}\r\n\r\n// TODO look for next words, if multiple are capitalized,\r\n// then it's probably not a sentence ending\r\nexports.isCustomAbbreviation = function(str) {\r\n    if (str.length <= 3) {\r\n        return true;\r\n    }\r\n\r\n    return isCapitalized(str);\r\n}\r\n\r\n// Uses current word count in sentence and next few words to check if it is\r\n// more likely an abbreviation + name or new sentence.\r\nexports.isNameAbbreviation = function(wordCount, words) {\r\n    if (words.length > 0) {\r\n        if (wordCount < 5 && words[0].length < 6 && isCapitalized(words[0])) {\r\n            return true;\r\n        }\r\n\r\n        var capitalized = words.filter(function(str) {\r\n            return /[A-Z]/.test(str.charAt(0));\r\n        });\r\n\r\n        return capitalized.length >= 3;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nvar isNumber = exports.isNumber = function(str, dotPos) {\r\n    if (dotPos) {\r\n        str = str.slice(dotPos-1, dotPos+2);\r\n    }\r\n\r\n    return !isNaN(str);\r\n};\r\n\r\n// Phone number matching\r\n// http://stackoverflow.com/a/123666/951517\r\nexports.isPhoneNr = function(str) {\r\n    return str.match(/^(?:(?:\\+?1\\s*(?:[.-]\\s*)?)?(?:\\(\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\s*\\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\s*(?:[.-]\\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\s*(?:[.-]\\s*)?([0-9]{4})(?:\\s*(?:#|x\\.?|ext\\.?|extension)\\s*(\\d+))?$/);\r\n};\r\n\r\n// Match urls / emails\r\n// http://stackoverflow.com/a/3809435/951517\r\nexports.isURL = function(str) {\r\n    return str.match(/[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/);\r\n};\r\n\r\n// Starting a new sentence if beginning with capital letter\r\n// Exception: The word is enclosed in brackets\r\nexports.isConcatenated = function(word) {\r\n    var i = 0;\r\n\r\n    if ((i = word.indexOf(\".\")) > -1 ||\r\n        (i = word.indexOf(\"!\")) > -1 ||\r\n        (i = word.indexOf(\"?\")) > -1)\r\n    {\r\n        var c = word.charAt(i + 1);\r\n\r\n        // Check if the next word starts with a letter\r\n        if (c.match(/[a-zA-Z].*/)) {\r\n            return [word.slice(0, i), word.slice(i+1)];\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nexports.isBoundaryChar = function(word) {\r\n    return word === \".\" ||\r\n           word === \"!\" ||\r\n           word === \"?\";\r\n};\r\n","/*jshint node:true, laxcomma:true */\r\n\"use strict\";\r\n\r\nvar sanitizeHtml = require('sanitize-html');\r\n\r\nvar stringHelper = require('./stringHelper');\r\nvar Match  = require('./Match');\r\n\r\nvar newline_placeholder = \" @~@ \";\r\nvar newline_placeholder_t = newline_placeholder.trim();\r\n\r\n\r\nvar whiteSpaceCheck = new RegExp(\"\\\\S\", \"\");\r\nvar addNewLineBoundaries = new RegExp(\"\\\\n+|[-#=_+*]{4,}\", \"g\");\r\nvar splitIntoWords = new RegExp(\"\\\\S+|\\\\n\", \"g\");\r\n\r\n\r\n// Split the entry into sentences.\r\nexports.sentences = function(text, user_options) {\r\n    if (!text || typeof text !== \"string\" || !text.length) {\r\n        return [];\r\n    }\r\n\r\n    if (!whiteSpaceCheck.test(text)) {\r\n      // whitespace-only string has no sentences\r\n      return [];\r\n    }\r\n\r\n    var options = {\r\n        \"newline_boundaries\"  : false,\r\n        \"html_boundaries\"     : false,\r\n        \"html_boundaries_tags\": [\"p\",\"div\",\"ul\",\"ol\"],\r\n        \"sanitize\"            : false,\r\n        \"allowed_tags\"        : false,\r\n        \"preserve_whitespace\" : false,\r\n        \"abbreviations\"       : null\r\n    };\r\n\r\n    if (typeof user_options === \"boolean\") {\r\n        // Deprecated quick option\r\n        options.newline_boundaries = true;\r\n    }\r\n    else {\r\n        // Extend options\r\n        for (var k in user_options) {\r\n            options[k] = user_options[k];\r\n        }\r\n    }\r\n\r\n    Match.setAbbreviations(options.abbreviations);\r\n\r\n    if (options.newline_boundaries) {\r\n        text = text.replace(addNewLineBoundaries, newline_placeholder);\r\n    }\r\n\r\n    if (options.html_boundaries) {\r\n        var html_boundaries_regexp = \"(<br\\\\s*\\\\/?>|<\\\\/(\" + options.html_boundaries_tags.join(\"|\") + \")>)\";\r\n        var re = new RegExp(html_boundaries_regexp, \"g\");\r\n        text = text.replace(re, \"$1\" + newline_placeholder);\r\n    }\r\n\r\n    if (options.sanitize || options.allowed_tags) {\r\n        if (! options.allowed_tags) {\r\n            options.allowed_tags = [\"\"];\r\n        }\r\n\r\n        text = sanitizeHtml(text, { \"allowedTags\" : options.allowed_tags });\r\n    }\r\n\r\n\r\n    // Split the text into words\r\n    var words;\r\n    var tokens;\r\n\r\n    // Split the text into words\r\n    if (options.preserve_whitespace) {\r\n        // <br> tags are the odd man out, as whitespace is allowed inside the tag\r\n        tokens = text.split(/(<br\\s*\\/?>|\\S+|\\n+)/);\r\n\r\n        // every other token is a word\r\n        words = tokens.filter(function (token, ii) {\r\n          return ii % 2;\r\n        });\r\n    }\r\n    else {\r\n        // - see http://blog.tompawlak.org/split-string-into-tokens-javascript\r\n        words = text.trim().match(splitIntoWords);\r\n    }\r\n\r\n\r\n    var wordCount = 0;\r\n    var index = 0;\r\n    var temp  = [];\r\n    var sentences = [];\r\n    var current   = [];\r\n\r\n    // If given text is only whitespace (or nothing of \\S+)\r\n    if (!words || !words.length) {\r\n        return [];\r\n    }\r\n\r\n    for (var i=0, L=words.length; i < L; i++) {\r\n        wordCount++;\r\n\r\n        // Add the word to current sentence\r\n        current.push(words[i]);\r\n\r\n        // Sub-sentences, reset counter\r\n        if (~words[i].indexOf(',')) {\r\n            wordCount = 0;\r\n        }\r\n\r\n        if (Match.isBoundaryChar(words[i]) || stringHelper.endsWithChar(words[i], \"?!\") || words[i] === newline_placeholder_t) {\r\n            if ((options.newline_boundaries || options.html_boundaries) && words[i] === newline_placeholder_t) {\r\n                current.pop();\r\n            }\r\n\r\n            sentences.push(current);\r\n\r\n            wordCount = 0;\r\n            current   = [];\r\n\r\n            continue;\r\n        }\r\n\r\n\r\n        if (stringHelper.endsWithChar(words[i], \"\\\"\") || stringHelper.endsWithChar(words[i], \"”\")) {\r\n            words[i] = words[i].slice(0, -1);\r\n        }\r\n\r\n        // A dot might indicate the end sentences\r\n        // Exception: The next sentence starts with a word (non abbreviation)\r\n        //            that has a capital letter.\r\n        if (stringHelper.endsWithChar(words[i], '.')) {\r\n            // Check if there is a next word\r\n            // This probably needs to be improved with machine learning\r\n            if (i+1 < L) {\r\n                // Single character abbr.\r\n                if (words[i].length === 2 && isNaN(words[i].charAt(0))) {\r\n                    continue;\r\n                }\r\n\r\n                // Common abbr. that often do not end sentences\r\n                if (Match.isCommonAbbreviation(words[i])) {\r\n                    continue;\r\n                }\r\n\r\n                // Next word starts with capital word, but current sentence is\r\n                // quite short\r\n                if (Match.isSentenceStarter(words[i+1])) {\r\n                    if (Match.isTimeAbbreviation(words[i], words[i+1])) {\r\n                        continue;\r\n                    }\r\n\r\n                    // Dealing with names at the start of sentences\r\n                    if (Match.isNameAbbreviation(wordCount, words.slice(i, 6))) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (Match.isNumber(words[i+1])) {\r\n                        if (Match.isCustomAbbreviation(words[i])) {\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Skip ellipsis\r\n                    if (stringHelper.endsWith(words[i], \"..\")) {\r\n                        continue;\r\n                    }\r\n\r\n                    //// Skip abbreviations\r\n                    // Short words + dot or a dot after each letter\r\n                    if (Match.isDottedAbbreviation(words[i])) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (Match.isNameAbbreviation(wordCount, words.slice(i, 5))) {\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            sentences.push(current);\r\n            current   = [];\r\n            wordCount = 0;\r\n\r\n            continue;\r\n        }\r\n\r\n        // Check if the word has a dot in it\r\n        if ((index = words[i].indexOf(\".\")) > -1) {\r\n            if (Match.isNumber(words[i], index)) {\r\n                continue;\r\n            }\r\n\r\n            // Custom dotted abbreviations (like K.L.M or I.C.T)\r\n            if (Match.isDottedAbbreviation(words[i])) {\r\n                continue;\r\n            }\r\n\r\n            // Skip urls / emails and the like\r\n            if (Match.isURL(words[i]) || Match.isPhoneNr(words[i])) {\r\n                continue;\r\n            }\r\n        }\r\n\r\n        if (temp = Match.isConcatenated(words[i])) {\r\n            current.pop();\r\n            current.push(temp[0]);\r\n            sentences.push(current);\r\n\r\n            current = [];\r\n            wordCount = 0;\r\n            current.push(temp[1]);\r\n        }\r\n    }\r\n\r\n    if (current.length) {\r\n        sentences.push(current);\r\n    }\r\n\r\n\r\n    // Clear \"empty\" sentences\r\n    sentences = sentences.filter(function(s) {\r\n        return s.length > 0;\r\n    });\r\n\r\n    var result = sentences.slice(1).reduce(function (out, sentence) {\r\n      var lastSentence = out[out.length - 1];\r\n      // Single words, could be \"enumeration lists\"\r\n      if (lastSentence.length === 1 && /^.{1,2}[.]$/.test(lastSentence[0])) {\r\n          // Check if there is a next sentence\r\n          // It should not be another list item\r\n          if (!/[.]/.test(sentence[0])) {\r\n              out.pop()\r\n              out.push(lastSentence.concat(sentence));\r\n              return out;\r\n          }\r\n      }\r\n      out.push(sentence);\r\n      return out;\r\n    }, [ sentences[0] ]);\r\n\r\n    // join tokens back together\r\n    return result.map(function (sentence, ii) {\r\n      if (options.preserve_whitespace && !options.newline_boundaries && !options.html_boundaries) {\r\n        // tokens looks like so: [leading-space token, non-space token, space\r\n        // token, non-space token, space token... ]. In other words, the first\r\n        // item is the leading space (or the empty string), and the rest of\r\n        // the tokens are [non-space, space] token pairs.\r\n        var tokenCount = sentence.length * 2;\r\n        if (ii === 0) {\r\n          tokenCount += 1;\r\n        }\r\n        return tokens.splice(0, tokenCount).join('');\r\n      }\r\n      return sentence.join(\" \");\r\n    });\r\n};\r\n","export function dispatch(name, message = null, elm = window) {\n  const e = new CustomEvent(\n    name,\n    Object.assign({ bubbles: true }, { detail: message })\n  );\n  elm.dispatchEvent(e);\n}\n\nexport function subscribe(name, callback, elm = window) {\n  elm.addEventListener(name, callback);\n}\n","function empty(s) {\n  if (s === undefined) return;\n  return s;\n}\n\nexport default empty;\n","const re_punctuation = /(\\.|\\:|\\!|\\?|\\\"|\\))$/g;\n\nfunction terminate(text, autoTerminate = false) {\n  // return a closed sentnece.\n  text = text && text.trim();\n\n  if (!text) return;\n\n  var is_closed = re_punctuation.test(text);\n  var sufix = autoTerminate && !is_closed ? \".\" : \"\";\n\n  return `${text}${sufix}`;\n}\n\nexport default terminate;\n","const settings = require(\"./config\");\n\nfunction htmlToStringArray(children, options = {}) {\n  const { prefixToken, className } = { ...settings, ...options };\n\n  return [...children].map(el => {\n    const { innerText, classList } = el;\n    const is_comment = classList.contains(className);\n    const prefix = is_comment ? prefixToken : \"\";\n\n    return `${prefix}${innerText.trim()}`;\n  });\n}\n\nexport default htmlToStringArray;\n","const comment = new RegExp(\"^[>]s?\", \"g\");\n\nfunction arrayToHtml(array = []) {\n  // returns DOM string\n  // parse comment chars to className \"comment\"\n\n  return [...array]\n    .map(text => {\n      const className = comment.test(text) ? ` class=\"comment\"` : \"\";\n      const value = text ? text.replace(comment, \"\").trim() : \"<br />\";\n\n      return `<div${className}>${value}</div>`;\n    })\n    .join(\"\\n\")\n    .toString();\n}\n\nexport default arrayToHtml;\n","import defaultConfig from \"./config\";\nimport empty from \"./empty\";\nimport terminate from \"./terminate\";\nimport htmlToStringArray from \"./htmlToStringArray\";\nimport arrayToHtml from \"./arrayToHtml\";\n\nimport \"./editor.scss\";\n\n/*\n\n  const e = initialize($elm, {...options})\n\n  e.onChange((candidate, versions) = console.log(candidate, versions))\n  \n  e.trigger(\"shiftaltalt\", toggleCase);\n\n  const toggleCase = el => {\n    const text = el.innerText;\n    const upper = text.toUpperCase() === text;\n    const toggle = upper ? \"toLowerCase\" : \"toUpperCase\";\n    el.innerText = text[toggle]();\n  };\n\n*/\n\nlet editor;\nlet config = { ...defaultConfig };\n\nlet cache = {\n  candidate: null, // string\n  versions: [null] // versions\n};\n\n// const re_comment_prefix = new RegExp(\"^[>]s?\", \"g\");\nconst re_punctuation = /(\\.|\\:|\\!|\\?|\\\"|\\))$/g;\nconst re_comments = /^([\\/\\>\\?\\=\\!]\\s*?)/;\nconsole.log(re_punctuation);\n\nconst triggerDictionary = {\n  cleanup: cleanupBlanks,\n  shiftshift: toggleComment\n};\n\nfunction getCandidateString(value) {\n  // recieve String or Array\n  // returns string\n  // parse the DOM elements to simple Array\n  value = value || htmlToStringArray(editor.children);\n\n  const { autoTerminate } = config;\n  const is_array = value && value.constructor === Array;\n  const array = is_array ? value : textToArray(value);\n\n  return [...array]\n    .map(line =>\n      re_comments.test(line) ? null : terminate(line, autoTerminate)\n    )\n    .filter(s => s && s.length)\n    .join(\" \")\n    .trim();\n}\n\nfunction textToArray(text) {\n  // returns simple text Array\n  // correcting for double line breaks\n\n  return text.replace(/\\n\\n/gm, \"\\n\").split(/\\n/g);\n}\n\n// [\"Lorem ipsum 1\",\"Lorem ipsum 2\",\"> Lorem ipsum 4\",\"\",\"Lorem ipsum 3\"]\nfunction clearVersions() {\n  editor.innerHTML = \"\";\n  editor = null;\n  cache.candidate = null;\n  cache.versions = [null];\n  // issue onClose event\n}\n\nfunction load(value = null, options = {}) {\n  if (!value) return;\n  if (!editor) initialize();\n\n  const array = value.constructor === Array ? value : textToArray(value);\n  const html = arrayToHtml(array);\n\n  config = Object.assign({}, config, options);\n\n  editor.innerHTML = html;\n  return html;\n}\n\nfunction toggleComment(bool) {\n  var line = document.getSelection().focusNode.parentNode;\n  var text = line.innerText;\n  var skip = !/div/i.test(line.nodeName) || !text || !text.trim();\n\n  if (skip) return;\n\n  line.classList.toggle(\"comment\");\n}\n\nfunction cleanupBlanks(rows) {\n  [...rows].forEach((row, n) => {\n    const text = (row.innerText && row.innerText.trim()) || null;\n    text ? row : row.classList.remove(\"comment\");\n  });\n}\n\nfunction executeTriggers(e, keyTime, keyHistory) {\n  const { parentNode } = window.getSelection().focusNode;\n  const children = parentNode.children;\n\n  keyHistory = keyHistory.join(\"\").toLowerCase();\n\n  const { cleanup } = triggerDictionary;\n  const trigger =\n    triggerDictionary[keyHistory] ||\n    triggerDictionary[`id${keyHistory}`] ||\n    empty;\n\n  cleanup(children);\n  trigger(parentNode);\n  notifyChanges();\n}\n\nfunction bindEvents() {\n  let ts = 0;\n  let hist = [];\n\n  editor.onkeyup = e => {\n    const { doubleTap, resetDelay } = config;\n    const diff = e.timeStamp - ts;\n    const delay = diff < doubleTap;\n    ts = e.timeStamp;\n\n    hist = diff > resetDelay ? [] : hist;\n\n    hist.push(e.key);\n    hist = hist.slice(-5);\n\n    setTimeout(() => executeTriggers(e, delay, hist), 0);\n  };\n}\n\nfunction getVersionArray() {\n  const options = { ...config };\n  return htmlToStringArray(editor.children, options);\n}\n\nfunction notifyChanges() {\n  // if the candidate is diffrent OR\n  // if the version array is different\n  // execute the change\n  const { candidate, versions } = { ...cache };\n  const { onChange } = config;\n\n  const nextCandidate = String(getCandidateString());\n  const nextVersions = [...getVersionArray()];\n\n  // cheap checks first ...\n  const a = candidate !== nextCandidate;\n\n  const b = a || versions.length !== nextVersions.length;\n\n  // most expensive check\n  const execute =\n    b || versions.sort().join(\"\") !== nextVersions.sort().join(\"\");\n\n  // change detected\n  if (execute) {\n    cache = {\n      candidate: nextCandidate,\n      versions: nextVersions\n    };\n    onChange(nextCandidate, nextVersions);\n  }\n}\n\nfunction addOnChange(fn) {\n  config = Object.assign({}, config, { onChange: fn });\n}\n\nfunction trigger(key, callback) {\n  const id = triggerDictionary[key] ? `id${key}` : key;\n  triggerDictionary[id] = callback;\n  console.log(\"added trigger [%s]\", id, key);\n}\n\nfunction initialize(selector = null, options) {\n  config.selector = config.selector || selector;\n  editor = document.querySelector(config.selector);\n\n  if (!editor) {\n    throw `module requires DOM element [${selector}]`;\n  }\n\n  if (options) {\n    config = Object.assign({}, config, options);\n  }\n\n  bindEvents();\n  return {\n    load,\n    trigger,\n    clear: clearVersions,\n    settings: () => config,\n    onChange: addOnChange,\n    candidate: getCandidateString,\n    versions: htmlToStringArray\n  };\n}\n\nexport default initialize;\n","var pSlice = Array.prototype.slice;\nvar Object_keys = typeof Object.keys === 'function'\n    ? Object.keys\n    : function (obj) {\n        var keys = [];\n        for (var key in obj) keys.push(key);\n        return keys;\n    }\n;\n\nvar deepEqual = module.exports = function (actual, expected) {\n  // enforce Object.is +0 !== -0\n  if (actual === 0 && expected === 0) {\n    return areZerosEqual(actual, expected);\n\n  // 7.1. All identical values are equivalent, as determined by ===.\n  } else if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  } else if (isNumberNaN(actual)) {\n    return isNumberNaN(expected);\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (typeof actual != 'object' && typeof expected != 'object') {\n    return actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected);\n  }\n};\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction isNumberNaN(value) {\n  // NaN === NaN -> false\n  return typeof value == 'number' && value !== value;\n}\n\nfunction areZerosEqual(zeroA, zeroB) {\n  // (1 / +0|0) -> Infinity, but (1 / -0) -> -Infinity and (Infinity !== -Infinity)\n  return (1 / zeroA) === (1 / zeroB);\n}\n\nfunction objEquiv(a, b) {\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b);\n  }\n  try {\n    var ka = Object_keys(a),\n        kb = Object_keys(b),\n        key, i;\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key])) return false;\n  }\n  return true;\n}\n","let serial = 0;\nconst uuid = () => {\n  serial++;\n  return (\n    new Date().valueOf().toString(16) + // eg 127b795136 (11)\n    Math.floor(1000 + Math.random() * 1000).toString(13) + // eg aa7 (3)\n    (1000 + (serial++ % 1000)).toString(5) + // eg 13001 (5)\n    \"\"\n  ).slice(-16);\n};\n\nexport default uuid;\n","import SBD from \"sbd\";\n\nfunction inflate(text) {\n  // returns sentences broken into lines\n  const array = SBD.sentences(text);\n  return array.join(\"\\n\\n\");\n}\n\nexport default inflate;\n","import deepEqual from \"deep-is\";\nimport uuid from \"./uuid\";\nimport inflate from \"./inflate\";\n\nfunction time() {\n  return new Date().toString().replace(/.* (\\d+:\\d+:\\d+) .*/g, \"$1\");\n}\nfunction storage(sufix = null) {\n  const ns = [\"rewrite\", sufix].filter(val => val).join(\"-\");\n\n  return {\n    read: () => {\n      const data = localStorage[ns] || null;\n      return data && JSON.parse(data);\n    },\n\n    write: obj => {\n      clearTimeout(timer);\n      count = (count || 0) + 1;\n      timer = setTimeout(() => {\n        console.log(\"localstroage SAVE\", count, time());\n        localStorage[ns] = JSON.stringify(obj);\n        count = 0;\n      }, delay);\n    }\n  };\n}\n\nexport default {\n  uuid,\n  deepEqual,\n  inflate,\n  storage,\n  time\n};\n","import sbd from \"sbd\";\nimport { dispatch, subscribe } from \"./functions\";\nimport initialize from \"./editor\";\nimport u from \"./utilities\";\n\nimport \"./styles.scss\";\n\nlet $focusOn;\n\nconst messages = {\n  confirmDelete: `\n    You are unlocking this paragraph. \n\n    This will delete the working versions and destill \n    the paragraph to the currently elected candidate.\n\n    CANCEL to keep working versions\n    OK to discard versions`\n};\n\nconst editor = initialize(\"#sentences\", {\n  autoTerminate: true,\n  prefixToken: \"// \"\n});\n\neditor.onChange((candidate, versions) =>\n  dispatch(\"updateparent\", { candidate, versions })\n);\n\n// load some text into the DOM\nconst $doc = document.querySelector(\"#document\");\n\n$doc.innerHTML = `\n      <div>Lorem Ipsum 11 word. Lorem Ipsum 12 word. Lorem Ipsum 13 word.</div>\n      <div><br /></div>\n      <div>Lorem Ipsum 21 word. Lorem Ipsum 22 word. Lorem Ipsum 23 word.</div>\n      <div><br /></div>\n      <div><br /></div>\n      <div><br /></div>\n      <div>Lorem Ipsum 31 word. Lorem Ipsum 32 word. Lorem Ipsum 33 word.</div\n`;\n\nsubscribe(\"updateparent\", e => {\n  console.log(\"UPDATE-PARENT:\", e.detail, e);\n  const { candidate, versions } = e.detail;\n  document.querySelector(\"#article\").innerHTML = candidate;\n  document.querySelector(\"#versions\").innerHTML = JSON.stringify(versions);\n\n  if ($focusOn) {\n    $focusOn.innerText = candidate;\n    $focusOn.dataset.versions = JSON.stringify(versions);\n  }\n});\n\n// document.getElementById(\"app\").innerHTML = ``;\n\ndocument.querySelector(\"#document\").ondblclick = e => {\n  e.target.id = e.target.id || u.uuid();\n  let { id, innerText, dataset } = e.target;\n  const { versions } = dataset;\n\n  if (versions) {\n    // confirm delete\n    if (!window.confirm(messages.confirmDelete)) return;\n\n    // first clear editor\n    editor.clear();\n\n    // next ... remove DOM reference\n    $focusOn.id = \"\";\n    $focusOn = null;\n\n    // next cleanup this\n    e.target.className = \"\";\n    e.target.id = \"\";\n    e.target.dataset.versions = \"\";\n\n    // update local storage\n    console.log(\"toggle off\", $focusOn);\n    return;\n  }\n\n  const text = u.inflate(innerText);\n  const value = (versions && JSON.parse(versions)) || text || \"\";\n\n  $focusOn = document.querySelector(`#${id}`);\n  $focusOn.classList.add(\"locked\");\n\n  editor.load(value);\n};\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}