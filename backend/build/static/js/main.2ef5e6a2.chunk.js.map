{"version":3,"sources":["utilities/childrenToVersionArray.js","utilities/uuid.js","utilities/terminate.js","utilities/textToArray.js","utilities/getCandidateString.js","config.js","utilities/collectionToHtml.js","utilities/defer.js","utilities/download.js","utilities/focusOn.js","utilities/jsonParseSafe.js","utilities/htmlToCollection.js","utilities/inflate.js","utilities/message.js","utilities/readTextFile.js","utilities/selectedValueArray.js","utilities/toggleStringCase.js","utilities/tts.js","utilities/unwrap.js","utilities/wordcount.js","utilities/backupRestore.js","utilities/points.js","utilities/elapsed.js","utilities/storage.js","utilities/index.js","modules/Texteditor/bindEvents.js","modules/Texteditor/arrayToHtml.js","utilities/Parse.js","modules/Texteditor/updateKeysPressed.js","utilities/arrayToCollection.js","utilities/scrollIntoViewIfNeeded.js","modules/Texteditor/index.js","modules/Article.js","modules/Sentences.js","modules/Storage/index.js","modules/Sidebar/ToggleToInput.js","modules/Sidebar/FileRow.js","modules/divider.js","modules/Sidebar/Settings.js","modules/Sidebar/index.js","index.js"],"names":["childrenToVersionArray","children","char","arguments","length","undefined","versions","Object","toConsumableArray","map","row","hidden","classList","contains","text","concat","innerText","trim","o","pre","snA","snB","uuid","toString","Date","valueOf","re_punctuation","terminate","autoTerminate","is_closed","test","sufix","textToArray","plaintext","catenated","replace","split","s","join","re_comments","getCandidateString","value","array","constructor","Array","line","filter","config","re","lineEnd","newLine","commentChars","passiveKeys","timer","default","delay","options","flag","tag","br","markdown","scrollToSelected","v2","_config$options$optio","objectSpread","unique","html","classnames","modifiers","datasets","exclude","_row$text","_row$versions","_row$selected","selected","id","candidate","json","JSON","stringify","isEmpty","isInactive","inactive","locked","empty","keys","forEach","key","name","k","el","className","dataset","innerHTML","p","document","createElement","slice","push","register","defer","ns","fn","ms","logs","t","n","verbose","_false$verbose","console","log","clearTimeout","setTimeout","mimes","download","object","data","_object$type","type","_object$appendId","appendId","_mimes$type","slicedToArray","mime","ext","filename","element","payload","encodeURIComponent","setAttribute","style","display","body","appendChild","click","removeChild","focusOn","$el","selector","callback","els","querySelectorAll","remove","add","focus","jsonParseSafe","string","result","alt","parse","e","error","htmlToCollection","reHtmlTags","_el$innerText","nodeName","obj","inflate","asarray","SBD","sentences","messages","confirmDelete","readTextFile","files","currentTarget","reader","FileReader","file","onload","target","readAsText","selectedValueArray","sbd","jsonSafeParse","toggleStringCase","english","languages","retry","synth","voices","lowercase","toLowerCase","uppcercase","toUpperCase","a","b","british","selectedVoice","initialize","window","speechSynthesis","getVoices","navigator","index","lang","indexOf","findIndex","Math","max","saythis","tts","SpeechSynthesisUtterance","voice","assign","volume","pitch","rate","speak","warn","methods","say","read","period","speaking","cancel","String","apply","i","TTS","unwrap","exceptions","txt","some","processline","wordcount","utilities_backupRestore","backup","bak","RegExp","localStorage","restore","purge","points","pixels","round","parseInt","isDate","isNaN","elapsed","then","now","Number","parts","diff","_parts","weekday","month","day","year","hour","minute","second","offset","tz","time","intervals","reduce","acc","cur","candidates","v","interval","getFullYear","origin","location","API","settings","article","user","storage","val","onLine","this","delete","pull","guid","fetch","method","headers","Content-Type","r","previous","current","articles","meta","status","updateArticle","username","article_id","d","updateSettings","update","article_object","priority","created","modified","opened","wordtarget","label","defaults","averages","datas","backups","percent","A","B","min","ratio","insertRow","c","construcor","Function","write","utilities","alert","confirm","prompt","backupRestore","collectionToHtml","deepEqual","message","bindEvents","texteditor","onkeydown","_this","passive","keySequence","updateKeysPressed","trigger","triggers","find","_this$triggers$key","code","bind","onkeyup","_this2","deselect","focusNode","getSelection","parentNode","setSelected","after","change","call","wordcounter","onclick","arrayToHtml","_collection","_options","keyHistory","arrayToCollection","Parse","classCallCheck","_this$options","HTMLCollection","linebreaks","unwrapColumns","toTextArray","collection","scrollIntoViewIfNeeded","Element","prototype","centerIfNeeded","parent","parentComputedStyle","getComputedStyle","parentBorderTopWidth","getPropertyValue","parentBorderLeftWidth","overTop","offsetTop","scrollTop","overBottom","clientHeight","overLeft","offsetLeft","scrollLeft","overRight","clientWidth","alignWithTop","scrollIntoView","execCommand","Texteditor","words","init","toHTML","show","container","getElementById","keytime","_this$hidden","bool","Boolean","_this$triggers$ns","querySelector","_data$meta$wordtarget","_this$re","m","Article","possibleConstructorReturn","getPrototypeOf","on","articleToggleActive","collapseSelectedParagraph","sentencesUpdateContent","typewriterMode","typewriter","forwardOnly","assertThisInitialized","toggle","u","preventDefault","stopPropagation","_this$selected","Senetences","updateSelectedParagraph","toggleInactiveFlag","carridgeReturn","deleteCurrentLine","cr","sel","range","createRange","insertBefore","nextSibling","setStart","collapse","removeAllRanges","addRange","startup","require","Storage","list","syncId","timestamp","create","schema","path","local","recent","splice","_this$current","_ref$current","ToggleToInput","props","rename","reset","_this$state","state","original","store","setState","edit","toggleEditAndFocus","_this$state2","react_default","tabIndex","onBlur","onChange","onClick","onKeyDown","blur","href","React","Component","FileRow","vertical","notifySizeChange","_ref","callbacks","getArticleByGuid","updateCurrent","handleDelete","handleWordTarget","downloadText","downloadJson","data-guid","Sidebar_ToggleToInput","Settings","readSelected","_this$article","_this$article$selecte","_this$article$textedi","fs","collapsed","strikethrough","dark","values","fontsize","splitwidth","toggleClassName","prevProps","updates","save","persist","fontSize","_this3","_this4","getOnOff","defaultValue","forward","dragging","width","minWidth","threshold","temp","resize","pageX","cancelBubble","returnValue","_state","innerWidth","left","elements","onResize","div","mouse","onmousedown","ondblclick","addEventListener","altKey","Sidebar","saveDividerWidth","syncWithServer","_u$backupRestore","_ref$splitwidth","setSyncProfile","_this$props","fileObj","setWordTarget","makeEditable","onKeyPress","handleImport","_this$props2","that","open","toCollection","handleDataRestore","valid","saveAs","_fs$read","date","toISOString","saveToDisk","_this2$state","getUpdatedArticles","_ref2","_ref2$guid","_ref2$current","_ref2$values","_ref3$splitwidth","divider","updateWordCount","registerMouseEvent","sidebar","zone","offsetWidth","showsidebar","_this$state$current","_this$state$articles","Sidebar_FileRow","_this5","articleList","getArticles","htmlFor","accept","Sidebar_Settings","mouseEvents","up","move","onmouseup","onmousemove","prefix","Sentences","bindTo","RE","articleText","initilize","ReactDOM","render","modules_Sidebar","overlay","src"],"mappings":"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","file":"static/js/main.2ef5e6a2.chunk.js","sourcesContent":["function childrenToVersionArray(children, char = '>') {\n    // create a versions array from DOM collection\n\n    // First cast to collection of the value and visiblity\n    const data = [...children].map(row => {\n        const hidden = row.classList.contains('inactive');\n        const text = `${row.innerText}`.trim();\n\n        return { text, hidden };\n    });\n\n    // Second, cast as plaintext array (versions)\n    const versions = data.map(o => {\n        const pre = o.hidden ? char : '';\n        const text = o.text;\n\n        return `${pre}${text}`;\n    });\n\n    return [...versions];\n}\n\nexport default childrenToVersionArray;\n","let snA = 0;\nlet snB = 0;\n\n// fractionally slow runtime\n// --------------------------\n// function v1() {\n//   const a = (((snA += 1) % 6) + 10).toString(16);\n//   const b = new Date().valueOf().toString(16);\n//   const c = 1000 + ((snB += 1) % 999);\n//   return `${a}${b}${c}`;\n// }\n\nfunction v2() {\n  // alpha + timestamp + 1000 (1+11+4=16)\n  return (\n    (((snA += 1) % 6) + 10).toString(16) +\n    new Date().valueOf().toString(16) +\n    (1000 + ((snB += 1) % 999)) +\n    \"\"\n  );\n}\n\nconst uuid = v2;\nexport default uuid;\n\n/** QUOKKA INLINE UNIT TEST  * /\n\nvar max = 10000000;\nconsole.time(\"v\");\nfor(var i = 0; i < max; i ++) v1();\nconsole.timeEnd(\"v\");\n\nconsole.time(\"v\");\nfor(var i = 0; i < max; i ++) v2();\nconsole.timeEnd(\"v\");\nconsole.log(new Date())\n\n/** */\n","const re_punctuation = /(\\.|:|!|\\?|\"|\\))$/g;\n\nfunction terminate(text, autoTerminate = false) {\n    // return a closed sentnece.\n    text = text && text.trim();\n\n    if (!text) return;\n\n    var is_closed = re_punctuation.test(text);\n    var sufix = autoTerminate && !is_closed ? '.' : '';\n\n    return `${text}${sufix}`;\n}\n\nexport default terminate;\n","function textToArray(plaintext = null) {\n  // returns simple text Array\n  // correcting for double line breaks\n  // and removing hard line breaks.\n\n  if (!plaintext) return;\n\n  let catenated = plaintext.trim();\n\n  // remove carridge returns (aka CrLf => Lf)\n  if (/\\r/.test(plaintext)) catenated = catenated.replace(/\\r/gm, \"\");\n\n  // unwrap hardline breaks.\n  catenated = catenated.split(/\\n{2,}/gm);\n  catenated = catenated.map(\n    s =>\n      s\n        .replace(/\\n+/g, \" \")\n        .replace(/\\s{2,}/g, \" \")\n        .trim() || \"\"\n  );\n\n  // normalize the paragraph breaks\n  catenated = catenated.join(\"\\n\\n\");\n  catenated = catenated.split(/\\n/g);\n\n  return [...catenated];\n}\n\n/** quokka inline test * /\ntextToArray(\"one\\ntwo\\n\\nthree\"); //?\n/** */\n\nexport default textToArray;\n","import terminate from './terminate';\nimport textToArray from './textToArray';\n\nconst re_comments = /^([/>?=!]\\s*?)/;\n\nfunction getCandidateString(value, autoTerminate = false) {\n    // recieve String or Array\n    // returns string\n    // parse the DOM elements to simple Array\n\n    if (!value) return '';\n\n    const is_array = value && value.constructor === Array;\n    const array = is_array ? value : textToArray(value);\n    return [...array]\n        .map(line =>\n            re_comments.test(line) ? null : terminate(line, autoTerminate)\n        )\n        .filter(s => s && s.length)\n        .join(' ')\n        .trim();\n}\n\nexport default getCandidateString;\n","const re = {\n    lineEnd: /(^\\w|[.?!;]\\s+\\w)/g, // alpha. beta? charlie! delta;\n    newLine: /^-{3,}/, // the magic sequence to add <br/> via editor\n    commentChars: /^(\\s+)?[>?!/]+(\\s+)?/, // so far ... the prefix comment tokens\n    passiveKeys: /^(arrow|shift|control|alt|tab)/i, // keys that dont alter the sentence\n};\nlet options = {\n    flag: 'inactive',\n    re: /^(\\s+)?[>?!/]+(\\s+)?/,\n    tag: 'p',\n    br: '<br/>',\n    markdown: false,\n    scrollToSelected: true,\n};\nconst timer = {\n    // after: 2500, // the last event to fire, this is used to persist\n    default: 100, // the normal event delay in miliseconds\n    delay: 0, // dynamic var update depending on event type\n};\nexport default {\n    re,\n    timer,\n    options,\n};\n","import uuid from './uuid';\nimport getCandidateString from './getCandidateString';\nimport config from '../config';\n\nexport default v2;\n\nfunction v2(array, options) {\n    // returns HTML String\n    // Expected collection schema:\n    // [{selected: true, text: String, versions: Object}, ...]\n\n    if (!array) return;\n\n    const { tag, br, re, flag } = { ...config.options, options };\n    let unique = true; // ensure only one selected DOM element\n\n    const html = array.map(row => {\n        let classnames = {};\n        let modifiers = {};\n        let datasets = {};\n\n        const exclude = /^(text|versions|locked|selected|html|classnames)/i;\n        const { text = '', versions = '', selected = '' } = row;\n        const id = versions ? uuid() : '';\n        const candidate = versions && getCandidateString(versions);\n        const value = text || candidate || '';\n        const json = versions ? JSON.stringify(versions) : '';\n\n        const isEmpty = versions && !candidate ? true : false;\n        const isInactive = re.test(value) || row.inactive;\n\n        // derived classNames\n        classnames.locked = versions ? true : null;\n        classnames[flag] = isInactive ? true : null;\n        classnames.selected = unique && selected ? true : null;\n        classnames.empty = isEmpty ? true : null;\n\n        // only add non-existant keys\n        Object.keys(row).forEach(key => {\n            if (exclude.test(key) || key in classnames) return;\n\n            // seperate modifiers\n            if (/^m-/i.test(key)) {\n                // Boolean values signify modifiers\n                if (/^(true)$/i.test(row[key])) {\n                    return (modifiers[key] = true);\n                }\n\n                // String values are datasets and need to be string JSON\n                return (datasets[key] = JSON.stringify(row[key]));\n            }\n\n            // append classnames\n            classnames[key] = true;\n        });\n\n        // append classnames array\n        if (row && row.classnames) {\n            row.classnames.forEach(name => {\n                classnames[name] = true;\n            });\n        }\n\n        // flattern keys into string\n        classnames =\n            Object.keys(classnames)\n                .map(key => (classnames[key] ? key : ''))\n                .join(' ')\n                .trim() || null;\n\n        // ensure the \"selected\" element is unique\n        unique = selected ? false : unique;\n\n        // catenate datasets\n        datasets = Object.keys(datasets).map(k => `data-${k}='${datasets[k]}'`);\n        datasets = ` ${datasets.join(' ')}`;\n        datasets = datasets.trim() ? ` ${datasets}` : '';\n\n        const el = {};\n        el.id = id ? ` id=\"${id}\"` : '';\n        el.className = classnames ? ` class=\"${classnames}\"` : '';\n        el.dataset = versions ? ` data-versions='${json}'` : '';\n        el.innerHTML = value.replace(re, '') || br;\n\n        // catenate the modifiers\n        modifiers = Object.keys(modifiers).map(k => `${k}=\"\"`);\n        modifiers = `${modifiers.join(' ')}`;\n        modifiers = modifiers.trim() ? ` ${modifiers}` : '';\n\n        const p = document.createElement(tag);\n        p.id = id;\n        p.dataset.versions = JSON.stringify(candidate);\n\n        return `<${tag}${el.id}${el.className}${modifiers}${datasets}${\n            el.dataset\n        }>${el.innerHTML}</${tag}>`;\n        // return el.outerHTML;\n    });\n\n    // ensure there is always an extra last line\n    if (!/<br\\s?\\/?>/i.test(html.slice(-1))) {\n        html.push(`<${tag}>${br}</${tag}>`);\n    }\n\n    return html.join('\\n');\n}\n","const register = {\n    /*\n        {\n            ns: String // namespace\n            fn: Function // callback\n            ns: Number // milisecond delay\n            t: Symbol // placeholder for Timer\n            n: Number // counts executions\n        }\n    */\n};\n\nfunction defer(ns, fn, ms = 250, logs = false) {\n    if (!ns || !fn) return;\n\n    // create non-existant register\n    if (!register[ns]) {\n        // logs && console.log('CREATE REGISTER [%s]', ns);\n        register[ns] = { ns, fn, ms, t: null, n: 0, verbose: logs === true };\n    }\n\n    // clear existing timeout & create new one\n    let { verbose = false } = false; //register[ns];\n    register[ns].n += 1; //?\n\n    verbose && console.log('CALLING REGISTER [%s]', ns, register[ns].n);\n    clearTimeout(register[ns].t);\n    register[ns].t = setTimeout(() => {\n        verbose && console.log('EXECUTING REGISTER [%s]', ns, register[ns].n);\n        delete register[ns];\n        return fn();\n    }, ms);\n}\n\n/** QUOKKA INLINE UNIT TEST * /\nlet q = 0;\nconst mms = 1500;\nconst callback = () => {\n  console.log(\"[%s]\", (q += 1));\n};\n\n// this function should only be called twice.\ndefer(\"abc\", callback, mms, true);\ndefer(\"xyz\", callback, mms);\n\ndefer(\"abc\", callback, mms);\ndefer(\"xyz\", callback, mms);\n\ndefer(\"abc\", callback, mms);\ndefer(\"xyz\", callback, mms);\n\ndefer(\"abc\", callback, mms);\ndefer(\"xyz\", callback, mms);\n\ndefer(\"abc\", callback, mms);\ndefer(\"xyz\", callback, mms);\n\n/** */\n\nexport default defer;\n","// download a JSON file\n\nconst mimes = {\n    // key      mime    extension\n    json: [\"json\", \"json\"],\n    text: [\"text\", \"txt\"],\n    markdown: [\"text\", \"md\"]\n};\n\nfunction download(object) {\n    const { name, id, data, type = \"json\", appendId = true } = object;\n    const [mime, ext] = mimes[type];\n    const sufix = appendId ? `-${id}` : ``;\n    const filename = `${name}${sufix}.${ext}`;\n    const text = type === \"json\" ? JSON.stringify(data) : data;\n\n    const element = document.createElement(\"a\");\n    const payload = encodeURIComponent(text);\n\n    element.setAttribute(\"href\", `data:text/${mime};charset=utf-8,${payload}`);\n    element.setAttribute(\"download\", `${filename}`);\n    element.style.display = \"none\";\n\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n}\n\nexport default download;\n","function focusOn($el, selector, callback) {\n  // ensure there are no others\n  var els = document.querySelectorAll(`.${selector}`);\n  [...els].forEach(el => el.classList.remove(selector));\n\n  $el.setAttribute(\"tabindex\", \"-1\");\n  $el.classList.add(selector);\n  $el.focus();\n\n  return callback && callback();\n}\n\nexport default focusOn;\n","// jsonParseSafe\nexport default function(string, alt = '') {\n    let result;\n    const apost = '’'; // Try to coeherse JSON errors\n    try {\n        string = string.replace(/'/g, apost);\n        result = JSON.parse(string);\n    } catch (e) {\n        console.error('JSON parse Error!\\nUsing alternative:[%s]', alt);\n        console.log(e);\n        result = alt;\n    }\n    return result;\n}\n","import jsonParseSafe from './jsonParseSafe';\n\nfunction htmlToCollection(children) {\n    const reHtmlTags = /<[^<]+>/gi;\n    const array = [...children].map(el => {\n        const { innerText = '', innerHTML, dataset, nodeName, classList } = el;\n\n        if (!/(div|p)/i.test(nodeName)) return null;\n\n        const text = (innerText && innerText.trim()) || '';\n        const string = text || (innerHTML && innerHTML.replace(reHtmlTags, ''));\n\n        // const inactive = classList.contains(\"inactive\");\n        // const selected = (classList && classList.contains(\"selected\")) || undefined;\n        const versions =\n            dataset.versions && jsonParseSafe(dataset.versions, string);\n        const obj = {};\n\n        obj.text = string || '';\n        versions && (obj.versions = versions);\n\n        // convert all classNames to object keys\n        // classList.remove(\"locked\"); // derived is versions exist\n        [...classList].forEach(s => (obj[s] = s));\n\n        return obj;\n    });\n    return array.filter(row => row);\n}\n\nexport default htmlToCollection;\n","import SBD from \"sbd\";\n\nfunction inflate(text, asarray = false) {\n  // returns sentences broken into lines\n  const array = SBD.sentences(text);\n  return asarray ? array : array.join(\"\\n\");\n}\n\nexport default inflate;\n","const messages = {\r\n  confirmDelete: `\r\nYou are unlocking this paragraph. \r\n\r\nThis will delete the working versions and destill \r\nthe paragraph to the currently elected candidate.\r\n\r\n[CANCEL] to keep working versions\r\n[OK] to discard versions\r\n`\r\n};\r\n\r\nexport default function(key) {\r\n  return messages[key] || `WARNING:\\n\\nCan't find [${key}] message.`;\r\n}\r\n","/*\n<label for=\"uploadInput\">\n    <span>upload</span>\n    <input id=\"uploadInput\" type=\"file\" style=\"display:none;\" accept=\"text/*\">\n</label>\n */\n\nfunction readTextFile(e, callback) {\n  const files = e.currentTarget.files;\n  const reader = new FileReader();\n  const file = files[0];\n  const filename = file.name;\n\n  reader.onload = e => {\n    const { result } = e.target;\n    return callback(filename, result);\n  };\n  reader.readAsText(file);\n}\n\nexport default readTextFile;\n","import sbd from 'sbd';\nimport jsonSafeParse from './jsonParseSafe';\n\nfunction selectedValueArray(selected) {\n    if (!selected) return;\n    let { innerText, dataset } = selected;\n    const versions = dataset.versions;\n\n    // if there are versions and the innerText is \"empty\"\n    // then the line was deactivate by the sentence editor\n    selected.classList.remove('empty');\n    if (!innerText.replace(/^\\(empty\\)$/, '')) {\n        selected.classList.add('empty');\n        innerText = '(empty)';\n    }\n\n    innerText = innerText ? sbd.sentences(innerText) : [''];\n    const array = dataset.versions ? jsonSafeParse(versions) : innerText;\n\n    return array;\n}\n\nexport default selectedValueArray;\n","function toggleStringCase(string) {\n    const lowercase = string.toLowerCase();\n    const uppcercase = string.toUpperCase();\n    const lineEnd = /(^\\w|[.?!;]\\s+\\w)/g;\n\n    string =\n        string !== uppcercase\n            ? uppcercase\n            : lowercase.replace(lineEnd, (a, b) => a.toUpperCase());\n\n    return string;\n}\n\nexport default toggleStringCase;\n","var british = /^en-(uk|gb)/i;\n\nvar english;\nvar languages;\nvar retry;\nvar synth, voices;\nvar selectedVoice = null;\n\nfunction initialize() {\n    synth = window.speechSynthesis;\n    voices = synth.getVoices();\n    languages = languages || navigator.languages;\n\n    if (!voices) {\n        // console.warn(\"Voices not loaded. Reloading\");\n        retry && clearTimeout(retry);\n        retry = setTimeout(initialize, 150);\n        return retry;\n    }\n\n    let index = null;\n\n    // filter for browser language\n    console.log(voices.length, languages);\n\n    voices = voices.filter(o => o.lang.indexOf(languages[1]) + 1);\n    english = voices.filter(o => british.test(o.lang));\n\n    index = english.length && english.findIndex(o => /female/gi.test(o.name));\n    index = Math.max(index, 0);\n\n    console.log('TTS initialized', english.length, index);\n\n    selectedVoice = english.length ? english[index] : voices[0];\n    console.log('selectedVoice', selectedVoice);\n}\n\nfunction setVoice(i = 0) {\n    (english && english.length) || initialize();\n    selectedVoice = english[i];\n    return selectedVoice;\n}\n\nfunction saythis(text, n = '') {\n    const tts = new SpeechSynthesisUtterance();\n    const voice = selectedVoice || null;\n\n    if (!voice) {\n        return setTimeout(() => {\n            console.warn('Say this is not ready. Reloading.');\n            initialize();\n            saythis(text, n);\n        }, 450);\n    }\n\n    Object.assign(tts, {\n        volume: 1,\n        pitch: 1,\n        rate: 1,\n        voice,\n        text,\n    });\n\n    // console.log('say [%s]', tts.text, tts.text.length);\n    return synth.speak(tts);\n}\n\nfunction textToSpeech(array, period = '') {\n    // @array can be an Array of String (to split)\n\n    // this is a toggle function\n    // if it is already spleaking it stop\n    // otherwise it sets up and starts to read;\n\n    if (!synth) {\n        initialize();\n    }\n\n    if (synth.speaking) return synth.cancel();\n    if (!array) return;\n\n    let text = array.constructor === Array ? array : array.split('\\n');\n    text = text.filter(s => String(s || ''));\n\n    // speach dialog refinements\n    // break into short phrases or sentences to avoid word limt\n    // flatten nested sentence arrays\n    text = text.map(s => s.replace(/[“”_]+/gm, '')); // avoid saying QUOTE.\n    text = text.map(line => line.split(/[.]/g));\n    text = [].concat.apply([], text);\n\n    console.log('Total sentences [%s]', text.length);\n\n    // read each sentence\n    text.forEach((s, n) => saythis(`${s}${period}`, n));\n}\n\nconst methods = {\n    say: saythis,\n    read: textToSpeech,\n    voice: setVoice,\n    speaking: () => window.speechSynthesis.speaking,\n    cancel: () => window.speechSynthesis.cancel(),\n};\n\nwindow.TTS = methods;\n\nexport default initialize;\n","function unwrap(text = \"\", exceptions) {\n  // unwrap hardline breaks.\n  let catenated = text;\n  catenated = catenated.split(/\\n{2,}/gm);\n  catenated = catenated.map(s =>\n    exceptions ? processline(s, exceptions) : catenate(s)\n  );\n\n  // normalize the paragraph breaks\n  catenated = catenated.join(\"\\n\\n\");\n  catenated = catenated.split(/\\n/g);\n\n  return [...catenated];\n}\n\nfunction catenate(text) {\n  return (\n    text\n      .replace(/\\n+/g, \" \")\n      .replace(/\\s{2,}/g, \" \")\n      .trim() || \"\"\n  );\n}\n\nfunction processline(text, exceptions) {\n  let string = \"\";\n  text.split(/\\n/g).forEach(line => {\n    const txt = String(line || \"\").trim();\n    const test = exceptions.some(re => re.test(txt));\n    if (!txt) return;\n    string += test ? `\\n${txt}\\n` : `${txt} `;\n  });\n  return string.replace(/\\n{2,}/, \"\\n\").trim();\n}\n\nexport default unwrap;\n\n/** * /\nlet text;\n\ntext = `\n            CHARACTER (V.O)\n        (parenthesis)\n    Alpha beta charlie delta echo\n    foxtro. Golf hotel indigo juliet\n        (more wrylys)\n    Kilo lima mama niner oscar papa\n    quebec romeo sierra tango uniform\n    violet whiskey exray zebra.\n`;\n\nunwrap(text); //?\nunwrap(text, [/^[^a-z]+$/, /^\\(.*\\)$/]); //?\n\n/** */\n","function wordcount(value) {\r\n    value = String(value || '');\r\n\r\n    if (!value) return 0;\r\n\r\n    // collapse hyphenations into one entity\r\n    value = value.replace(/(\\w)[-]+(\\w)/g, '$1$1');\r\n\r\n    // normalize non-word chars .,:; etc.\r\n    value = value.replace(/[\\W\"]+/g, ' ');\r\n\r\n    // remove double spaces\r\n    value = value.replace(/(\\s{1,})/g, ' ');\r\n\r\n    // remove trailing spaces\r\n    value = value.trim();\r\n\r\n    return value.length ? value.split(' ').length : 0;\r\n}\r\n\r\nexport default wordcount;\r\n","function backup(ns = '') {\n    let bak = null;\n    const re = new RegExp(`^${ns}`);\n\n    Object.keys(localStorage)\n        .filter(k => re.test(k))\n        .forEach((k, i) => {\n            const key = k.replace(re, '');\n            bak = bak || {};\n            bak[`BAK-${key}`] = localStorage[k];\n        });\n\n    return bak;\n}\n\nfunction restore(ns = '', obj) {\n    if (!obj) return;\n\n    Object.keys(obj).forEach((k, i) => {\n        const key = k.replace(/^(BAK-+)?/, `${ns}-`);\n        const string =\n            typeof obj[k] === 'string' ? obj[k] : JSON.stringify(obj[k]);\n\n        // localStorage[key] = obj[k];\n        localStorage[key] = string;\n    });\n}\n\nfunction purge(ns = '') {\n    Object.keys(localStorage).forEach(k =>\n        k.indexOf(ns) + 1 ? delete localStorage[k] : null\n    );\n}\n\nexport default {\n    backup,\n    restore,\n    purge,\n};\n","function points(pixels) {\n    // https://everythingfonts.com/font/tools/units/px-to-pt\n    if (!pixels || typeof pixels !== 'number') return;\n\n    const pica = 0.75292857248934;\n    let points = Math.round(pixels * pica);\n    points = parseInt(points, 10);\n    return points;\n}\n\nexport default points;\n","function interval(then, now = null) {\n    const parts = then.toString().split(/[\\s:]/g); //?\n\n    then = then.valueOf();\n    now = now || new Date().valueOf();\n    const diff = now - then;\n\n    //   if (!diff) {\n    //     return null;\n    //   }\n\n    // local time and date\n    const [weekday, month, day, year, hour, minute, second, offset, tz] = parts;\n\n    // just the current time\n    const time = `${hour}:${minute}`;\n\n    const intervals = [\n        { name: 'milisecond', value: 1 },\n        { name: 'second', value: 1000 },\n        { name: 'minute', value: 60 },\n        { name: 'hour', value: 60 },\n        { name: 'day', value: 24 },\n        { name: 'week', value: 7 },\n        { name: 'month', value: 52 / 12 },\n        { name: 'year', value: 12 },\n    ];\n\n    // append accumulated time diff to interval Object\n    intervals.reduce((acc, cur) => {\n        cur.diff = acc / cur.value;\n        return acc / cur.value; //?\n    }, diff);\n\n    // remove falsey values\n    const candidates = intervals.filter(v => v.diff >= 1); //?\n    const candidate = intervals[candidates.length - 1]; //?\n\n    return {\n        ...candidate,\n        time,\n        weekday,\n        month,\n        day: Number(day),\n        year: Number(year),\n        hour: Number(hour),\n        minute: Number(minute),\n        second: Number(second),\n        offset,\n        tz,\n    };\n}\n\nfunction isDate(value) {\n    return value && value !== 'Invalid Date' && !isNaN(value) ? true : false;\n}\n\nfunction elapsed(then, now = null) {\n    // integrity check dates, and if \"then\" date is in the future\n    now = now || new Date();\n    then = typeof then === 'string' ? new Date(Number(then)) : new Date(then);\n    if (!isDate(then) || !isDate(now) || then > now) return null;\n\n    //   quick diff ...\n    if (now.valueOf() - then.valueOf() < 1000 * 30) {\n        return `Now`;\n    }\n\n    const e = interval(then, now);\n    e.diff = parseInt(e.diff);\n\n    let result;\n    switch (e.name) {\n        case 'milisecond':\n            result = `Now`;\n            break;\n        case 'second':\n            if (e.diff < 30) {\n                result = `Now`;\n                break;\n            }\n            result = `${parseInt(e.diff)} seconds ago`;\n            break;\n        case 'minute':\n            if (e.diff < 2) {\n                result = `A minute ago`;\n                break;\n            }\n            result = `${parseInt(e.diff)} minutes ago`;\n            break;\n\n        case 'hour':\n            if (e.diff < 2) {\n                result = 'An hour ago';\n                break;\n            }\n\n            if (e.diff < 12) {\n                result = `${e.diff} hours ago`;\n                break;\n            }\n\n            result = `At ${e.time}`;\n            break;\n\n        case 'day':\n            if (e.diff < 2) {\n                result = `Yesterday at ${e.time}`;\n                break;\n            }\n            result = `${e.weekday} at ${e.time}`;\n            break;\n\n        case 'week':\n            if (e.diff < 2) {\n                result = `Last ${e.weekday} at ${e.time}`;\n                break;\n            }\n            result = `${e.weekday} ${e.day} ${e.month} at ${e.time}`;\n            break;\n\n        case 'month':\n            if (Number(e.year) === now.getFullYear()) {\n                result = `${e.weekday} ${e.day} ${e.month} at ${e.time}`;\n                break;\n            }\n\n        // eslint-disable-next-line\n        default:\n            result = `${e.day} ${e.month} ${e.year} ${e.time}`;\n            break;\n    }\n    return result;\n}\n\n/** quokka inline * /\n\nconst then = new Date(1971, 4, 31, 23, 59, 58); //?\nconst now = new Date(1971, 5, 1, 1, 1, 1); //?\nelapsed(then, now); //?\n\n/** */\n\nexport default elapsed;\n","import defer from './defer';\n\nlet origin = document.location.origin;\norigin = /localhost/i.test(origin) ? origin.replace(/[0-9]+$/, '5000') : origin;\nconsole.log('API origin', origin);\n\nconst API = {\n    settings: `${origin}/api/v1.0/settings/`,\n    article: `${origin}/api/v1.0/article/`,\n    user: `${origin}/api/v1.0/user/`,\n};\n\nfunction storage(sufix = null) {\n    let delay = 250;\n    const ns = ['rewrite', sufix].filter(val => val).join('-');\n    const apiPushDelay = 10 * 1000; // 10 seconds\n    const { onLine } = window.navigator;\n\n    // this looks strange. leave it! it's for JEST testing.\n    const localStorage = this.localStorage || window.localStorage;\n\n    return {\n        data: () => {\n            return localStorage;\n        },\n\n        delete: () => {\n            delete localStorage[ns];\n        },\n\n        pull: (guid, fn) => {\n            if (!onLine) fn(null);\n\n            console.log('pull from api %s (%s)', guid, API.user);\n\n            fetch(`${API.user}${guid}`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n                .then(r => r.json())\n                .then(json => {\n                    const status = 200;\n                    const settings = { ...json.settings };\n                    let previous =\n                        settings.previous || settings.current || null;\n\n                    // articles is a contrived index of metadata\n                    let articles = Object.keys(json)\n                        .filter(k => /^[a-z0-9]{16}/.test(k))\n                        .map(r => {\n                            return json[r].meta;\n                        });\n\n                    // deleting \"settings\" leaves the raw article rows\n                    delete json.settings;\n\n                    const data = {\n                        ...json,\n                        settings,\n                        articles,\n                        previous,\n                    };\n                    fn({\n                        status,\n                        data,\n                    });\n                });\n        },\n        updateArticle: (username, article_id, payload) => {\n            if (!onLine) {\n                console.log('not online');\n                return;\n            }\n            fetch(`${API.article}${username}/${article_id}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(payload),\n            })\n                .then(r => r.json())\n                .then(d => console.log(d));\n        },\n        updateSettings: body => {\n            const username = body.guid;\n            if (!username) {\n                console.warn('Cant push settings. No username', body);\n                return;\n            }\n            fetch(`${API.settings}${username}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(body),\n            })\n                .then(r => r.json())\n                .then(d => console.log(d));\n        },\n        update: article_object => {\n            const { uuid } = article_object;\n            fetch(`${API.article}${uuid}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(article_object),\n            })\n                .then(r => r.json())\n                .then(d => console.log(d));\n        },\n\n        push: (guid = null, priority = 0) => {\n            if (!onLine) {\n                console.log('not online');\n                return;\n            }\n            if (!guid) {\n                console.log('no guid');\n                return;\n            }\n\n            console.log('push to api %s', guid, API.settings, API.article);\n            return defer(\n                'push',\n                function() {\n                    let data = {};\n\n                    Object.keys(localStorage)\n                        .filter(k => /^rewrite/i.test(k))\n                        .map(name => {\n                            const key = name.replace(/^([^-]+-+)/, '');\n                            data[key] = localStorage[name];\n                            return name;\n                        });\n\n                    // settings is a seperate API call\n                    // it needs to include previous (aka current)\n                    // and ensure the key names are kosher\n\n                    let settings = {};\n                    data.settings = JSON.parse(data.settings);\n                    Object.keys(data.settings)\n                        .filter(k => /^([a-z]+)$/i.test(k))\n                        .forEach(k => {\n                            if (/^settings/i.test(k)) return;\n                            settings[k] = data.settings[k];\n                        });\n\n                    fetch(`${API.settings}${guid}`, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify(settings),\n                    })\n                        .then(r => r.json())\n                        .then(d => console.log(d));\n\n                    // articles have a new schema it is a\n                    // catentation of data and article meta data\n                    // the API will insert or update articles\n\n                    console.log(data.articles);\n                    JSON.parse(data.articles).forEach(r => {\n                        const key = r.guid || r.uuid;\n                        const article = {\n                            meta: {\n                                uuid: key,\n                                username: guid,\n                                created: r.created,\n                                modified: r.modified || r.opened,\n                                name: r.name,\n                                wordtarget: r.wordtarget,\n                            },\n                            data: JSON.parse(data[key]),\n                        };\n\n                        fetch(`${API['article']}${guid}/${key}`, {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                            },\n                            body: JSON.stringify(article),\n                        })\n                            .then(r => r.json())\n                            .then(d => console.log(d));\n                    });\n                },\n                priority || apiPushDelay\n            );\n        },\n\n        backup: (label = null) => {\n            /*\n             * a discreet save, and drasric change dectector\n             * if too much change happerns, a new record is\n             * created as a precaution\n             * */\n\n            const id = `${ns}-backup`;\n            const defaults = { averages: [], datas: [] };\n            const threshold = 100 - 22; // % of difference\n            const name = label || new Date().valueOf();\n\n            return defer(\n                id,\n                function() {\n                    const current = localStorage[ns] || null;\n                    const row = { tag: name, data: current };\n\n                    let index = 0;\n                    let backups = localStorage[id] || null;\n                    let percent = [99];\n                    let array = [row];\n\n                    backups = backups ? JSON.parse(backups) : defaults;\n\n                    if (backups.datas.length) {\n                        index = backups.datas.length - 1;\n                        const A = JSON.stringify(row);\n                        const B = JSON.stringify(backups.datas.slice(-1));\n                        const min = Math.min(A.length, B.length);\n                        const max = Math.max(A.length, B.length);\n                        const ratio = parseInt((min / max) * 100, 10);\n\n                        const total = backups.averages.reduce(\n                            (a, c) => a + Number(c || 0)\n                        );\n                        const mean = total / backups.averages.length;\n                        const insertRow = (ratio / mean) * 100 < threshold;\n\n                        // console.log(\n                        //     'INSERT',\n                        //     insertRow,\n                        //     (ratio / mean) * 100,\n                        //     threshold\n                        // );\n\n                        // if a dramatic difference is detected then add another row\n                        if (insertRow) {\n                            console.warn(\n                                'Insert backup. [%s] (%s)',\n                                insertRow,\n                                threshold\n                            );\n                            backups.datas.push(row);\n                        } else {\n                            // console.log('update', index);\n                            backups.averages.push(ratio);\n                            backups.datas[index] = row;\n                        }\n\n                        percent = backups.averages.slice(-25);\n                        array = backups.datas;\n                    }\n\n                    backups = {\n                        averages: percent,\n                        datas: array,\n                    };\n\n                    localStorage[id] = JSON.stringify(backups);\n                },\n                1000\n            );\n        },\n\n        read: fn => {\n            const data = localStorage[ns] || null;\n            const isJson = data && /^[[{\"]/.test(data);\n            const object = isJson ? JSON.parse(data) : data;\n            return fn && fn.construcor === Function ? fn(object) : object;\n        },\n\n        write: (obj, async = false) => {\n            const fn = () => (localStorage[ns] = JSON.stringify(obj));\n            return async ? defer(ns, fn, delay, true) : fn();\n        },\n    };\n}\n\nexport default storage;\n","import childrenToVersionArray from './childrenToVersionArray';\nimport collectionToHtml from './collectionToHtml';\nimport deepEqual from 'deep-is';\nimport defer from './defer';\nimport download from './download';\nimport focusOn from './focusOn';\nimport htmlToCollection from './htmlToCollection';\nimport inflate from './inflate';\nimport message from './message';\nimport readTextFile from './readTextFile';\nimport selectedValueArray from './selectedValueArray';\nimport toggleStringCase from './toggleStringCase';\nimport tts from './tts';\nimport unwrap from '../utilities/unwrap';\nimport uuid from './uuid';\nimport wordcount from './wordcount';\nimport backupRestore from './backupRestore';\nimport points from './points';\nimport elapsed from './elapsed';\nimport jsonParseSafe from './jsonParseSafe';\nimport storage from './storage';\n\nexport default {\n    alert,\n    confirm,\n    prompt,\n\n    backupRestore,\n    childrenToVersionArray,\n    collectionToHtml,\n    deepEqual,\n    defer,\n    elapsed,\n    download,\n    focusOn,\n    htmlToCollection,\n    inflate,\n    jsonParseSafe,\n    message,\n    points,\n    readTextFile,\n    selectedValueArray,\n    storage,\n    time,\n    toggleStringCase,\n    tts,\n    unwrap,\n    uuid,\n    wordcount,\n};\n\nfunction time() {\n    return new Date().toString().replace(/.* (\\d+:\\d+:\\d+) .*/g, '$1');\n}\n\n// const { prompt, confirm, alert } = windowdd\nfunction prompt(s, value) {\n    return window.prompt(s, value);\n}\n\nfunction confirm(s) {\n    return window.confirm(s);\n}\n\nfunction alert(s) {\n    return window.alert(s);\n}\n","function bindEvents() {\n    const { texteditor } = this;\n\n    texteditor.onkeydown = handleKeyDown.bind(this);\n    texteditor.onkeyup = handleKeyUp.bind(this);\n    texteditor.onclick = handleClick.bind(this);\n}\n\nexport default bindEvents;\n\nfunction handleKeyDown(e) {\n    // if the row is flagged (ie. locked) then skip\n    // all non-passive key strokes\n\n    const passive = this.re.passiveKeys.test(e.key);\n    const versions = this.selected && this.selected.dataset.versions;\n\n    if (versions && !passive) {\n        console.log('versions and NOT passive');\n        return false;\n    }\n\n    // execute the registered triggers\n    const keySequence = this.updateKeysPressed(e, true);\n    const trigger = Object.keys(this.triggers).find(key => {\n        const { re, fn } = this.triggers[key];\n        return re && re.test(keySequence) ? fn : null;\n    });\n\n    console.log(\"ONKEYDOWN\", e.key, e.code, keySequence);\n    return this.trigger(trigger, e);\n}\n\nfunction handleKeyUp(e) {\n    this.deselect();\n\n    const passive = this.re.passiveKeys.test(e.key);\n    const { type, key } = e;\n    const { focusNode } = window.getSelection();\n    const { nodeName } = focusNode.parentNode;\n    let el = focusNode.parentNode;\n\n    // Enter will copy the id attribute to an empty node\n    // the id MUST stay unique\n    if (/^enter/i.test(key)) {\n        focusNode.id = '';\n        this.deselect();\n        return;\n    }\n\n    if (nodeName !== 'P') {\n        console.log('not P tag', type);\n        return;\n    }\n\n    const { innerText } = el;\n\n    // ignore empty lines.\n    if (!innerText || !innerText.trim()) {\n        console.log('no inner text');\n        this.deselect();\n        return;\n    }\n\n    // set \"parent\" DOM element\n    this.setSelected(el);\n\n    console.log('ONKEYUP [%s] <%s>', type, nodeName, key);\n\n    // change the ms delay and ensure arrowkeys are processed immediately\n    const ms = this.timer.after;\n    this.timer.delay = passive ? 25 : this.timer.default;\n\n    // after all triggers always emit the change event.\n    this.defer('change', () => this.triggers.change.fn.call(this, e));\n\n    // refresh the wordcounter\n    this.wordcounter();\n\n    // this MUST be the very last trigger event.\n    this.defer('after', () => this.triggers.after.fn.call(this), ms);\n}\n\nfunction handleClick(e) {\n    this.deselect();\n    this.setSelected(e.target);\n    this.triggers.click && this.triggers.click.fn.call(this, e);\n}\n","import config from \"../../config\";\nlet { options } = config;\n\nfunction arrayToHtml(array, obj) {\n  // update the global parsing settings\n  if (obj) {\n    options = {\n      ...options,\n      ...obj\n    };\n  }\n\n  // no array ... exit\n  if (!array) return;\n\n  // shortcut to the settings\n  const { flag, re, tag, br } = options;\n\n  // iterare over incoming array of strings\n  // output a catenated DOM string (innerHTML)\n  return [...array]\n    .map(s => {\n      let innerText = `${s}`.replace(re, \"\").trim() || br;\n      innerText = typeof s !== \"string\" ? br : innerText;\n\n      let className = [];\n\n      re.test(s || \"\") && className.push(flag);\n\n      // s && s.className && className.push(s.className);\n      className = className.length ? className.join(\" \") : null;\n      className = (className && ` class=\"${className}\"`) || \"\";\n\n      return `<${tag}${className}>${innerText}</${tag}>`;\n    })\n    .join(\"\\n\");\n}\n\nexport default arrayToHtml;\n","import collectionToHtml from '../utilities/collectionToHtml';\nimport htmlToCollection from '../utilities/htmlToCollection';\nimport unwrapColumns from '../utilities/unwrap';\nimport arrayToCollection from '../utilities/arrayToCollection';\n\nlet _collection;\n\nclass Parse {\n    constructor(value = null, options = {}) {\n        this.options = {\n            flag: 'inactive',\n            re: /^(\\s+)?[>?!/]+(\\s+)?/,\n            unwrap: true, // unwrap hard breaks\n            tag: 'p',\n            br: '<br/>',\n            markdown: false,\n            ...options,\n        };\n\n        // cast the value as Object literal\n        if (!value) value = '';\n\n        if (value.data) {\n            console.warn('Coersing data from Object');\n            value = value.data;\n        }\n\n        const { re, unwrap, markdown } = this.options;\n\n        const constructor = value.constructor;\n        let type =\n            (constructor === Object && 'object') ||\n            (constructor === String && 'string') ||\n            (constructor === Array && 'array') ||\n            (constructor === HTMLCollection && 'html') ||\n            'unknown';\n\n        if (type === 'object' && value.data) {\n            console.warn('Coerse data array');\n            type = 'array';\n            value = value.data;\n        }\n\n        // determine input value and parse as\n        // collection schema\n        switch (type) {\n            case 'string':\n                // this is a MD of txt file convert it to collection\n                //? permit fountain screenplay detection\n\n                value = linebreaks(value);\n                value = unwrap ? unwrapColumns(value) : value.split(/\\n/g);\n                value = arrayToCollection(value, re, markdown);\n                break;\n\n            case 'array':\n                // this can be either a simple text array\n                // or a previously fromatted collection (eg. from disk)\n                value = arrayToCollection(value, re, markdown);\n                break;\n\n            case 'html':\n                // this is a collection of HTML nodes\n                value = htmlToCollection(value);\n                break;\n\n            default:\n                console.error(\n                    'WARNING! switch fallthrough for',\n                    type,\n                    constructor,\n                    value\n                );\n                break;\n        }\n        // assign to private value\n        _collection = [...value];\n    }\n\n    toHTML() {\n        const { options } = this;\n        return collectionToHtml.call(this, _collection, options);\n    }\n\n    toText() {\n        const array = toTextArray(_collection);\n        let string = array.join('\\n');\n        string = string.replace(/(\\s+)?$/g, '');\n\n        return string;\n    }\n\n    toArray() {\n        return toTextArray(_collection);\n    }\n\n    toCollection() {\n        return _collection;\n    }\n}\n\nexport default Parse;\n\nfunction toTextArray(collection) {\n    return [...collection].map(o => `${o.text}`);\n}\n\nfunction linebreaks(plaintext = '') {\n    // remove carridge returns (aka CrLf => Lf)\n    if (/\\r/.test(plaintext)) plaintext = plaintext.replace(/\\r/gm, '');\n    return plaintext;\n}\n","let timer = null; // timer symbol\nlet keyHistory = []; // stack of keyspressed\nconst reset = 250; // truncate history miliseconds\n\nexport default function(e, join) {\n  const string = e.key.trim() || e.code;\n\n  keyHistory.push(string);\n\n  timer && clearTimeout(timer);\n  timer = setTimeout(() => (keyHistory = []), reset);\n\n  // retrun catenated strings OR array literal?\n  return join ? keyHistory.join(\"\") : [...keyHistory];\n}\n","//! import marked from 'marked';\n//! import markdown from './markdown';\n\nexport default arrayToCollection;\n\n//! marked.setOptions({ headerIds: false });o\n\n/*\n\n{\n    html: String (rendered markdown)\n    text: String (plaintext)\n    inactive: Boolean (derived by RegEx)\n    classnames: Array (of Strings)\n\n}\n\n\n\n\n*/\n\nfunction arrayToCollection(array, re = /^>/, md = false) {\n    return array.map(row => {\n        const obj =\n            typeof row === 'string'\n                ? {\n                      html: null, // markdown render\n                      text: `${row}`.trim(),\n                      inactive: re.test(row),\n                      classnames: [],\n                  }\n                : row;\n\n        /* //! remove markdown ... for now\n        if (false && md && obj.text) {\n            obj.html = marked(obj.text).replace(/\\n+/g, '');\n            obj.html = unwrap(obj.html).trim() || null;\n\n            md = markdown(obj.text);\n            md.splice(-1, 1);\n            md.forEach(val => {\n                obj.classnames = obj.classnames || [];\n                obj.classnames.push(`md-${val}`);\n            });\n        }*/\n        return obj;\n    });\n}\n\n// recursively unwrapp the nested tags\n// eg. <a><bc>def</bc></a> ==> def\n// function unwrap(string = '') {\n//     const re = new RegExp(`^<([^>]+)>(.*)</\\\\1>$`, 'gm');\n//     return re.test(string) ? unwrap(string.replace(re, '$2')) : string;\n// }\n","// polyfill for non-webkit browsers\n// https://gist.github.com/hsablonniere/2581101\nfunction scrollIntoViewIfNeeded() {\n    if (!Element.prototype.scrollIntoViewIfNeeded) {\n        Element.prototype.scrollIntoViewIfNeeded = function(centerIfNeeded) {\n            centerIfNeeded = arguments.length === 0 ? true : !!centerIfNeeded;\n\n            var parent = this.parentNode,\n                parentComputedStyle = window.getComputedStyle(parent, null),\n                parentBorderTopWidth = parseInt(\n                    parentComputedStyle.getPropertyValue('border-top-width')\n                ),\n                parentBorderLeftWidth = parseInt(\n                    parentComputedStyle.getPropertyValue('border-left-width')\n                ),\n                overTop = this.offsetTop - parent.offsetTop < parent.scrollTop,\n                overBottom =\n                    this.offsetTop -\n                        parent.offsetTop +\n                        this.clientHeight -\n                        parentBorderTopWidth >\n                    parent.scrollTop + parent.clientHeight,\n                overLeft =\n                    this.offsetLeft - parent.offsetLeft < parent.scrollLeft,\n                overRight =\n                    this.offsetLeft -\n                        parent.offsetLeft +\n                        this.clientWidth -\n                        parentBorderLeftWidth >\n                    parent.scrollLeft + parent.clientWidth,\n                alignWithTop = overTop && !overBottom;\n\n            if ((overTop || overBottom) && centerIfNeeded) {\n                parent.scrollTop =\n                    this.offsetTop -\n                    parent.offsetTop -\n                    parent.clientHeight / 2 -\n                    parentBorderTopWidth +\n                    this.clientHeight / 2;\n            }\n\n            if ((overLeft || overRight) && centerIfNeeded) {\n                parent.scrollLeft =\n                    this.offsetLeft -\n                    parent.offsetLeft -\n                    parent.clientWidth / 2 -\n                    parentBorderLeftWidth +\n                    this.clientWidth / 2;\n            }\n\n            if (\n                (overTop || overBottom || overLeft || overRight) &&\n                !centerIfNeeded\n            ) {\n                this.scrollIntoView(alignWithTop);\n            }\n        };\n    }\n}\n\nexport default scrollIntoViewIfNeeded;\n","// import marked from 'marked';\n// import markdown from '../../utilities/markdown';\nimport bindEvents from './bindEvents';\nimport config from '../../config';\nimport arrayToHtml from './arrayToHtml';\nimport defer from '../../utilities/defer';\nimport uuid from '../../utilities/uuid';\nimport updateKeysPressed from './updateKeysPressed';\nimport Parse from '../../utilities/Parse';\nimport wordcount from '../../utilities/wordcount';\nimport arrayToCollection from '../../utilities/arrayToCollection';\nimport scrollIntoViewIfNeeded from '../../utilities/scrollIntoViewIfNeeded';\n\ndocument.execCommand('defaultParagraphSeparator', false, 'p');\n\nclass Texteditor {\n    constructor(id, options) {\n        const container = document.getElementById(id);\n        const texteditor = document.createElement('article');\n\n        texteditor.setAttribute('contenteditable', '');\n        texteditor.setAttribute('spellcheck', 'true');\n\n        container.innerHTML = '';\n        container.appendChild(texteditor);\n\n        this.id = id; // container ID\n        this.parent = null;\n        this.keytime = null;\n        this.selected = null;\n        this.markdown = null;\n        this.scrollToSelected = true;\n        this.words = 0;\n        this.wordtarget = 0;\n\n        this.container = container;\n        this.texteditor = texteditor;\n        this.data = {};\n\n        this.triggers = {\n            click: {\n                fn: s => console.warn('Default event. CLICK [%s]', s),\n            },\n            change: {\n                fn: s => console.warn('Default event. CHANGE [%s]', s),\n            },\n            after: {\n                fn: s => console.warn('Default event. AFTER [%s]', s),\n            },\n            wordcounter: { fn: function() {} },\n        };\n\n        // import external config settings\n        Object.assign(this, config, options);\n\n        let { hidden = false } = this;\n\n        // external modules\n        bindEvents.bind(this)();\n        this.defer = defer.bind(this);\n        this.uuid = uuid.bind(this);\n        this.arrayToHtml = arrayToHtml.bind(this);\n        this.updateKeysPressed = updateKeysPressed.bind(this);\n\n        // extends Mozilla with polyfill methods\n        if (Element && !Element.scrollIntoViewIfNeeded) {\n            scrollIntoViewIfNeeded();\n        }\n\n        // and lastly ... instanate\n        this.init();\n        this.show(!hidden);\n    }\n\n    bindTo(parent) {\n        this.parent = parent;\n    }\n\n    show(bool) {\n        bool = bool === undefined ? true : Boolean(bool);\n\n        this.hidden = bool !== true;\n        this.container.classList[this.hidden ? 'add' : 'remove']('hidden');\n    }\n\n    trigger(ns, e) {\n        if (!ns || !this.triggers[ns]) return;\n\n        const { fn, data } = this.triggers[ns];\n        const result = fn.call(this, e);\n\n        // pass result to callback\n        if (data && data.constructor === Function) {\n            console.log(result, data);\n            data.call(this, result);\n        }\n\n        return result;\n    }\n\n    on(key, re, fn, data) {\n        this.triggers[key] = { re, fn, data };\n    }\n\n    deselect(selector = 'selected') {\n        // if markdown is asctive, render it\n        // if (this.markdown) {\n        //     console.log('render markdown');\n        // }\n        const array = this.texteditor.querySelectorAll(`.${selector}`);\n        [...array].forEach(el => el.classList.remove(selector));\n        this.selected = null;\n    }\n\n    setSelected(el = null) {\n        let { id, innerText } = el;\n\n        // console.log('[%s]', el.innerText.trim(), el);\n        // if this element has text then set focus attributes\n\n        if (!innerText || !innerText.trim()) {\n            console.warn('Element has no innerText value');\n            return;\n        }\n\n        el.id = id || this.uuid();\n        el.classList.add('selected');\n\n        // if there is a version array, lock it\n        const locked = el.dataset && el.dataset.versions;\n        const method = locked ? 'add' : 'remove';\n        el.classList[method]('locked');\n\n        // if markdown is active ...\n        // if (this.markdown) {\n        //     console.log('restore RAW text data');\n        // }\n\n        this.selected = el;\n    }\n\n    focus() {\n        // if there is a selected element ...\n        // scroll to that element and ensure it\n        // also appears in the sentence editor\n        let el = document.querySelector('p.selected');\n        if (this.scrollToSelected && el) el.scrollIntoViewIfNeeded();\n    }\n\n    toggleMarkdown() {\n        this.markdown = false;\n    }\n\n    wordcounter = fn => {\n        this.defer.call(\n            this,\n            'wordcounter',\n            () => {\n                fn = fn || this.triggers.wordcounter.fn;\n                let innerHTML, diff;\n                const { innerText } = this.texteditor;\n\n                this.words = wordcount(innerText);\n                innerHTML = `<span class=\"value\">${this.words}</span>`;\n\n                if (this.wordtarget) {\n                    diff = this.wordtarget - this.words;\n                    let warn = diff < 0 ? '-warn' : '';\n                    innerHTML = `<span class=\"value value${warn}\">${\n                        this.words\n                    }/${this.wordtarget}</span>`;\n                }\n                return fn(innerHTML);\n            },\n            150\n        );\n    };\n    /*\n    init method is used to open or create an article.\n    */\n    init = array => {\n        // console.log(array);\n        if (!array) return;\n\n        const p = new Parse(array, { markdown: this.markdown });\n        this.texteditor.innerHTML = p.toHTML();\n\n        this.show();\n        this.focus();\n        this.wordcounter();\n    };\n\n    setWordTarget(n = 0) {\n        this.wordtarget = n;\n    }\n\n    reset(data) {\n        // clear the text editor\n        // clear selected element\n        // clear related editors\n        this.parent.texteditor.innerText = '';\n        this.texteditor.innerText = '';\n        this.parent.selected = null;\n        this.selected = null;\n        this.words = 0;\n        // this.wordtarget = 0;\n        this.data = {};\n\n        // backward compatability\n        if (data.meta) {\n            console.warn('Reduce article to data', data);\n\n            const { wordtarget = null } = data.meta;\n            this.wordtarget = wordtarget;\n\n            data = data.data;\n        }\n\n        this.init(data);\n    }\n\n    // updates the currently selected element\n    // transforms (versions) string array into innerText\n    // this is called when the Sentence updates the Paragrpah\n    update(array = null) {\n        console.log('UPDATE [%s]\\n', array, this.markdown);\n\n        const { selected } = this;\n        const { newLine, commentChars } = this.re;\n\n        if (!selected || !array) return;\n\n        // ensure the parent node is up-to-date\n        selected.dataset.versions = JSON.stringify(array);\n\n        // with the sentences catenate the paragraph innerText\n        // ignore commented lines, and modify empty lines.\n        let text = array\n            .map(s => {\n                let txt = newLine.test(s) ? '\\n\\n' : s;\n                txt = commentChars.test(txt) ? '' : txt;\n                return `${txt}`.trim();\n            })\n            .filter(s => s && s.trim())\n            .join(' ')\n            .trim();\n\n        // remove markdown classNames\n        [...selected.classList].forEach(\n            m => /^md/.test(m) && selected.classList.remove(m)\n        );\n\n        // render markdown paragraph and add new classNames\n        if (this.markdown && text) {\n            const obj = arrayToCollection([text], commentChars, true)[0];\n            selected.dataset.text = text;\n            text = obj.html || '';\n\n            if (obj.classnames && obj.classnames.length) {\n                obj.classnames.forEach(name => selected.classList.add(name));\n            }\n        }\n\n        // if there is no text, then mark the row & inject (empty)\n        selected.classList[text ? 'remove' : 'add']('empty');\n        selected.classList.add('locked');\n        selected.classList.add('selected');\n        selected.innerHTML = text || `(empty)`;\n\n        // this.parent.wordcount();\n\n        return selected;\n    }\n}\n\nexport default Texteditor;\n","import Texteditor from './Texteditor/';\nimport u from '../utilities/';\n\nclass Article extends Texteditor {\n    constructor(id, options) {\n        super(id, options);\n\n        this.on('click', null, articleToggleActive);\n        this.on('toggle', /^(altalt)$/i, articleToggleActive);\n        this.on('collapse', /^(shiftshift)$/i, collapseSelectedParagraph);\n\n        this.on('change', null, sentencesUpdateContent);\n        this.on(\n            'typewriter',\n            /(home|end|page|arrow|delete|backspace)/i,\n            typewriterMode\n        );\n\n        this.typewriter = typewriter.call(this);\n    }\n}\n\nexport default Article;\n\nfunction collapseSelectedParagraph() {\n    if (!this.selected) {\n        console.warn('no selected paragraph');\n        return;\n    }\n    this.selected.classList.toggle('inactive');\n}\n\nfunction sentencesUpdateContent() {\n    const array = u.selectedValueArray(this.selected);\n    this.parent.init(array);\n}\n\nfunction articleToggleActive(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    console.log(e.code);\n    if (!this.selected) {\n        console.log('no selected element');\n        return;\n    }\n    // let versions;\n    let array = u.selectedValueArray(this.selected);\n\n    let { classList, dataset } = this.selected;\n    let { versions } = this.selected.dataset;\n    const locked = versions && versions.trim();\n\n    // only double alt (on keyboard) allows unlock\n    if (/^key/.test(e.type) && locked && window.confirm('Are you sure')) {\n        classList.remove('locked');\n        dataset.versions = '';\n        array = [''];\n\n        // empty lines are deleted from the DOM\n        if (this.selected.classList.contains('empty')) {\n            this.selected.innerText = '';\n            this.selected.className = '';\n            this.selected.remove();\n            this.selected = null;\n            this.parent.init(['']);\n            return false;\n        }\n    }\n\n    // re-load the sentence instatance\n    this.parent.init(array);\n    return false;\n}\n\nfunction typewriter() {\n    let forwardOnly = false; // private variable\n\n    return function(bool) {\n        return (forwardOnly = typeof bool === 'boolean' ? bool : forwardOnly);\n    };\n}\n\nfunction typewriterMode(e) {\n    // console.log(\"typewriter\", e.key, e.code);\n    if (!this.typewriter()) return;\n\n    e.preventDefault();\n    return false;\n}\n","import Texteditor from './Texteditor/';\nimport u from '../utilities/';\n\nclass Senetences extends Texteditor {\n    constructor(id, options) {\n        super(id, options);\n\n        // update the options\n        this.arrayToHtml(null, { hidden: true });\n\n        // create the local triggers\n        this.on('change', null, updateSelectedParagraph);\n        this.on('toggle', /^(shiftshift)$/i, toggleInactiveFlag);\n        this.on('capitalize', /^(altenter)$/i, toggleStringCase);\n        this.on('newline', /^(shiftenter)$/i, carridgeReturn);\n        this.on('deleteline', /^(altbackspace)$/i, deleteCurrentLine);\n        this.on('click', null, () => {});\n    }\n}\n\nexport default Senetences;\n\nfunction carridgeReturn(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const p = this.selected;\n    const cr = document.createElement('p');\n    const br = document.createElement('br');\n    const sel = window.getSelection();\n    const range = document.createRange();\n\n    p.parentNode.insertBefore(cr, p.nextSibling);\n    cr.appendChild(br);\n\n    range.setStart(br, 0); // Changed range to start of BR\n    range.collapse(true);\n    sel.removeAllRanges();\n    sel.addRange(range);\n\n    return false;\n}\n\nfunction deleteCurrentLine(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log(e.target);\n    this.selected.remove();\n}\n\nfunction toggleStringCase() {\n    const { innerText } = this.selected;\n    this.selected.innerText = u.toggleStringCase(innerText);\n}\n\nfunction updateSelectedParagraph() {\n    const { children } = this.texteditor;\n    const array = u.childrenToVersionArray(children);\n    this.parent.update(array);\n}\n\nfunction toggleInactiveFlag(e) {\n    this.selected.classList.toggle('inactive');\n}\n","import uuid from '../../utilities/uuid';\nimport download from '../../utilities/download';\nimport readTextFile from '../../utilities/readTextFile';\nconst startup = require('./startup.json');\n\nclass Storage {\n    constructor(storage) {\n        this.key = null; // the current article's GUID\n        this.articles = this.list;\n        this.storage = storage;\n        this.uuid = uuid;\n        this.current = null; // currently open article\n        this.syncId = null;\n        this.timestamp = null;\n\n        this.create = createArticle.bind(this);\n    }\n\n    filename(guid, path) {\n        if (!guid) return;\n        return [path, guid].filter(s => s).join('-');\n    }\n\n    // sets the users syncID to not null\n    // this will cause the write method to\n    // push updates after the localstroage save\n    setSyncProfile(guid = null) {\n        console.log('Profile Sync', guid);\n        this.syncId = guid;\n        this.timestamp = new Date().valueOf();\n    }\n\n    // reads from localStorage\n    // guid: unique key\n    // example: rewrite-article-ace123ace123\n    read(guid) {\n        if (!guid) {\n            this.current = null;\n            return null;\n        }\n\n        const { storage, filename } = this;\n        const articles = storage('articles');\n        const file = storage(filename(guid)).read();\n\n        if (!file) {\n            this.current = null;\n            return null;\n        }\n\n        const meta = articles.read().find(obj => obj.guid === guid);\n        const current = { ...meta, data: file, previous: guid };\n\n        return (this.current = current);\n    }\n\n    // persists to localStorage\n    write(object) {\n        if (!object) return null;\n        console.log('write to filesystem', this.syncId);\n\n        const { current, filename, storage } = this;\n        const guid = current && current.guid;\n\n        if (!guid) {\n            console.log('no current guid');\n            return null;\n        }\n\n        const localkey = filename(guid);\n        const local = storage(localkey);\n\n        local.write(object, true);\n        local.backup();\n        // local.push(this.syncId);\n\n        // update last modified date\n        const articles = storage('articles');\n        let collection = articles.read();\n\n        // find current guid and pluck it out\n        const index = collection.findIndex(o => o.guid === guid);\n        const recent = collection.splice(index, 1)[0];\n\n        // update timestamp\n        recent.opened = new Date().valueOf();\n\n        // place most recently edited article first\n        collection = [recent, ...collection];\n\n        // save the updates to local\n        articles.write(collection, true);\n\n        this.current = { ...this.current, data: object };\n        return this.current;\n    }\n\n    // import\n    // parses JSON and plainText into a Article schema\n    // @value String or Object literal\n    import(value) {}\n\n    // export\n    // returns Object literal of Article schema\n    export() {}\n\n    // list\n    // returns an array of file metadata\n    // guid, name, created, opended, filesize ...\n    // the list can be filtered by regExp\n    list(filter) {\n        const articles = this.storage('articles');\n        return articles.read();\n    }\n\n    // open\n    // presents a file picker to load an external file\n    // same as import, without id or plainText string\n    open(files, fn) {\n        if (!files) {\n            console.error('Cant open, require files array');\n        }\n\n        // remember read file is async\n        return readTextFile(files, function(name, data) {\n            // console.log(\"read text file\", name, data);\n            return fn(name, data);\n        });\n    }\n\n    // save\n    // causes a download dialoge box to appear\n    // the filename derived from the currently selected file\n    save(filename) {\n        if (!this.current) {\n            console.error('No current article to download');\n            return;\n        }\n        const { guid, name, data } = this.current;\n        const metadata = {\n            id: guid,\n            name: filename || name,\n            data,\n        };\n\n        return download(metadata);\n    }\n\n    // rename\n    // assigns a new filename to the given guid\n    rename(uuid, filename) {\n        if (!uuid) return;\n\n        const list = this.list();\n        let index = list.findIndex(r => r.uuid === uuid);\n        let articles = this.storage('articles');\n        list[index].name = filename;\n        articles.write(list);\n    }\n\n    // delete this is a test\n    // deletes the associated files by guid\n    delete(guid) {\n        if (!guid) return false;\n\n        const { filename, storage } = this;\n        const list = this.list();\n        let index = list.findIndex(r => r.guid === guid);\n        let articles = storage('articles');\n        const previous = storage('previous');\n        const collection = articles.read();\n        collection.splice(index, 1);\n        // const pluck = collection.splice(index, 1);\n\n        articles.write(collection);\n        storage(filename(guid)).delete();\n\n        if (previous.read() === guid) {\n            previous.delete();\n        }\n        return true;\n    }\n\n    // initialize\n    // attempts to load previous article,\n    // or first article or blank or welcome page\n    initilize() {\n        const settings = this.storage('settings').read();\n        const { current = null } = settings || {};\n        if (!this.list()) {\n            this.create('a0123456789abcde', 'Startup example', startup);\n        }\n        if (current) {\n            this.read(current);\n        }\n        return this.current;\n    }\n}\n\nexport default Storage;\n\nfunction createArticle(guid, name, schema) {\n    if (!schema) {\n        console.error('Create requires article schema');\n        return;\n    }\n\n    // generate the initial metadata\n    guid = guid || uuid();\n    name = name || 'Untitled';\n    const created = new Date().valueOf();\n    const opened = new Date().valueOf();\n    const row = { guid, name, created, opened };\n\n    // append to list of articles\n    const articles = this.storage('articles');\n    const array = articles.read() || [];\n    array.push(row);\n    articles.write(array);\n\n    // save the article data\n    const key = this.filename(guid);\n    this.storage(key).write(schema);\n    this.storage('previous').write(guid);\n\n    this.current = {\n        ...row,\n        data: schema,\n        previous: guid,\n    };\n\n    return this.current;\n}\n","import React from 'react';\n\nclass ToggleToInput extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            edit: false,\n            name: props.name,\n            original: props.name,\n            guid: props.guid,\n        };\n    }\n\n    rename = (reset = false) => {\n        const { guid, name, original } = this.state;\n        let value = original;\n\n        if (!reset && name && name.trim() && name !== original) {\n            value = name.trim();\n            this.props.store.rename(guid, value);\n        }\n\n        this.setState({ edit: false, name: value, original: value });\n    };\n\n    toggleEditAndFocus = e => {\n        e.stopPropagation();\n        this.setState({ edit: true });\n        const { guid } = this.state;\n        setTimeout(() => document.querySelector(`#${guid}`).focus(), 150);\n    };\n\n    render() {\n        const { name, edit, guid } = this.state;\n        return !edit ? (\n            <span className=\"file-toggle-input\">\n                {name}\n                <a href=\"#edit\" onClick={this.toggleEditAndFocus}>\n                    edit\n                </a>\n            </span>\n        ) : (\n            <input\n                id={guid}\n                type=\"text\"\n                tabIndex=\"0\"\n                value={name}\n                onBlur={() => this.rename()}\n                onChange={e => {\n                    this.setState({ name: e.target.value });\n                }}\n                onClick={e => e.stopPropagation()}\n                onKeyDown={e => {\n                    let { key } = e;\n                    let reset = false;\n\n                    if (/^(escape)/i.test(key)) {\n                        key = 'enter';\n                        reset = true;\n                    }\n\n                    if (/^(enter)/i.test(key)) {\n                        this.rename(reset);\n                        e.target.blur();\n                    }\n                }}\n            />\n        );\n    }\n}\n\nexport default ToggleToInput;\n","import React from 'react';\nimport ToggleToInput from './ToggleToInput.js';\nimport elapsed from '../../utilities/elapsed';\n\nfunction FileRow({ object, callbacks }) {\n    const { guid, uuid, name, wordtarget, opened } = object;\n    const {\n        store,\n        getArticleByGuid,\n        updateCurrent,\n        handleDelete,\n        handleWordTarget,\n        downloadText,\n        downloadJson,\n    } = callbacks;\n\n    const target = wordtarget ? `${wordtarget} words` : `add`;\n    const article_id = guid || uuid;\n\n    return (\n        <div\n            className=\"inner\"\n            onClick={() => {\n                getArticleByGuid(article_id);\n                updateCurrent(article_id);\n            }}>\n            <span className=\"file-name\" data-guid={article_id}>\n                <ToggleToInput name={name} guid={article_id} store={store} />\n            </span>\n            <ul className=\"file-meta\">\n                <li>\n                    <a\n                        href=\"#delete\"\n                        onClick={e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            handleDelete(article_id);\n                        }}>\n                        del\n                    </a>\n                </li>\n                <li\n                    className=\"file-words\"\n                    onClick={e => handleWordTarget(e, wordtarget, article_id)}>\n                    Target: {target}\n                </li>\n\n                <li className=\"file-modified\">{elapsed(opened)}</li>\n                <li className=\"file-exports\">\n                    <a href=\"#txt\" onClick={downloadText}>\n                        txt\n                    </a>\n                    <a href=\"#json\" onClick={downloadJson}>\n                        json\n                    </a>\n                </li>\n            </ul>\n        </div>\n    );\n}\nexport default FileRow;\n","let A;\nlet B;\nlet vertical;\nlet dragging = false;\nlet notifySizeChange;\n\nlet state = {\n    width: 50, // initial ratio (percentage)\n    minWidth: 10, // min pixel width\n    threshold: 15, // screen width percentage\n};\n\nfunction settings(key, value) {\n    if (!key) return state;\n\n    // key, value pairs\n    const temp = {};\n    if (key.constructor !== Object && value !== undefined) {\n        temp[key] = value;\n        key = { ...temp };\n    }\n\n    state = { ...state, key };\n}\n\nfunction resize(e, value) {\n    if (!dragging && !value) return;\n\n    let { pageX } = e || {};\n\n    if (e) {\n        // prevent cursor selecting during drag\n        e.stopPropagation && e.stopPropagation();\n        e.preventDefault && e.preventDefault();\n        e.cancelBubble = true;\n        e.returnValue = false;\n    }\n\n    const { threshold, minWidth } = state;\n    const { innerWidth } = window;\n\n    pageX = pageX || ((value || 50) / 100) * innerWidth;\n    let width = value || Number((pageX / innerWidth) * 100);\n    width = Math.max(minWidth, width);\n    width = Math.min(100 - minWidth, width);\n\n    let percent = width;\n    A.classList.remove('hide-content');\n    B.classList.remove('hide-content');\n    vertical.classList.remove('hide-menu-left');\n    vertical.classList.remove('hide-menu-right');\n\n    if (width < threshold) {\n        // 15 (100-85) (innerWidth - minWidth) / innerWidth\n        percent = 100 * (minWidth / innerWidth);\n        A.classList.add('hide-content');\n        vertical.classList.add('hide-menu-left');\n    }\n    if (width > 100 - threshold) {\n        percent = 100 - 100 * ((minWidth * 1.5) / innerWidth);\n        B.classList.add('hide-content');\n        vertical.classList.add('hide-menu-right');\n    }\n\n    A.style.width = `${percent}%`;\n    B.style.width = `${100 - percent}%`;\n    vertical.style.left = `${percent}%`;\n\n    if (notifySizeChange) notifySizeChange(Number(percent));\n}\n\nconst elements = {};\nfunction update(id, html) {\n    elements[id].innerHTML = html;\n}\n\nfunction onResize(fn) {\n    notifySizeChange = fn;\n}\n\nfunction add(id) {\n    // add a div element container to the sidebar\n    // eg. the wordcounter\n    const div = document.createElement('div'); // Create a text node\n    div.id = id;\n    div.className = `divider-${id}`;\n    vertical.appendChild(div); // Append the text to <li>\n    elements[id] = div;\n}\n\nfunction initialize(width, mouse) {\n    vertical = document.querySelector('#vertical');\n    A = document.querySelector('.paragraphs');\n    B = document.querySelector('.sentences');\n\n    vertical.onmousedown = () => (dragging = true);\n    vertical.ondblclick = e => resize(e, 50);\n\n    mouse(null, 'up', () => (dragging = false));\n    mouse(null, 'move', resize);\n\n    // save(options);\n    state.width = width || 50;\n    resize(null, state.width);\n\n    console.log('resizer initialized');\n\n    return { resize, settings, add, update, onResize };\n}\n\nexport default initialize;\n","import React from 'react';\nimport u from '../../utilities/';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super();\n        this.article = props.article;\n        this.fs = u.storage('settings');\n\n        this.state = {\n            guid: null,\n            current: null,\n            modifiers: {\n                collapsed: true,\n                strikethrough: true,\n                typewriter: false,\n                markdown: false,\n                dark: false,\n            },\n            values: {\n                fontsize: 24,\n                splitwidth: 50,\n            },\n        };\n    }\n\n    componentDidMount() {\n        const settings = this.fs.read();\n        let state = { ...this.state };\n        if (settings) {\n            state = {\n                ...state,\n                ...settings,\n            };\n            this.setState(state);\n        }\n        // apply the UI modifiers\n        for (let key in state.modifiers) {\n            console.log(key, state.modifiers[key]);\n            this.toggleClassName(key, state.modifiers[key]);\n        }\n\n        // apply the UI values\n        for (let key in state.values) {\n            if (this[key]) {\n                console.log(key, state.values[key]);\n                this[key](state.values[key]);\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const updates = {};\n        if (this.props.current !== prevProps.current) {\n            updates.current = this.props.current;\n        }\n        if (this.props.guid !== prevProps.guid) {\n            updates.guid = this.props.guid;\n        }\n        if (this.props.splitwidth !== prevProps.splitwidth) {\n            updates.values = {\n                fontsize: this.state.values.fontsize,\n                splitwidth: this.props.splitwidth,\n            };\n        }\n\n        if (Object.keys(updates).length) {\n            console.log('settings got new props', updates);\n            this.setState({ ...updates });\n            this.save();\n        }\n    }\n\n    toggleClassName(string, value = null, selector = 'body') {\n        const { modifiers, values } = this.state;\n        const element = document.querySelector(selector);\n\n        let toggle = null;\n        toggle = typeof value === 'boolean' ? value : !modifiers[string];\n        toggle = Boolean(toggle);\n\n        const method = toggle ? 'add' : 'remove';\n\n        element.classList[method](string);\n\n        if (string in modifiers || string in values) {\n            modifiers[string] = toggle;\n        }\n\n        // only save UI interactions not\n        // initialization events that apply persisted values\n        // like componentDidMount\n        if (value === null) {\n            this.setState({ modifiers });\n            this.save();\n        }\n\n        return toggle === true;\n    }\n    getOnOff(name) {\n        const { modifiers } = this.state;\n        const bool = modifiers[name];\n        return bool ? (\n            <i className=\"icon-boolean-true\" />\n        ) : (\n            <i className=\"icon-boolean-false\" />\n        );\n    }\n    readSelected = e => {\n        e.stopPropagation();\n\n        const { selected = null, texteditor = null } = this.article;\n        const el =\n            selected && selected.innerText.trim() ? selected : texteditor;\n        if (!el || !el.innerText) return;\n\n        window.TTS.read(el.innerText);\n    };\n    fontsize(value, persist = false) {\n        document.querySelector('body').style.fontSize = `${value}px`;\n\n        if (!persist) return;\n        this.setState({ values: { fontsize: Number(value) } });\n        u.defer('fontsize', () => this.save(), 500);\n    }\n    save() {\n        // persist settings to localStorage\n        // and try to sync with the server\n        const { fs } = this;\n        u.defer(\n            'settings',\n            () => {\n                fs.write(this.state);\n                fs.updateSettings(this.state);\n            },\n            500\n        );\n    }\n\n    render() {\n        return (\n            <ul className=\"settings\">\n                <li>\n                    <div\n                        className=\"inner\"\n                        onClick={() => {\n                            this.toggleClassName('dark');\n                        }}>\n                        <strong>Toggle dark theme</strong>\n                        <em>{this.getOnOff('dark')}</em>\n                    </div>\n                </li>\n                <li>\n                    <div\n                        className=\"inner\"\n                        onClick={() => {\n                            this.toggleClassName('collapsed');\n                        }}>\n                        <strong>Collapse lines</strong>\n                        <em>{this.getOnOff('collapsed')}</em>\n                    </div>\n                </li>\n                <li>\n                    <div\n                        className=\"inner\"\n                        onClick={() => {\n                            this.toggleClassName('strikethrough');\n                        }}>\n                        <strong>Strike through</strong>\n                        <em>{this.getOnOff('strikethrough')}</em>\n                    </div>\n                </li>\n                <li className=\"no-underline\">\n                    <div className=\"inner\">\n                        <strong>Font size</strong>\n                        <em>\n                            {[\n                                this.state.values.fontsize,\n                                'px',\n                                '/',\n                                u.points(this.state.values.fontsize),\n                                'pt',\n                            ].join('')}\n                        </em>\n                    </div>\n                    <input\n                        type=\"range\"\n                        id=\"fontsize\"\n                        name=\"fontsize\"\n                        min=\"12\"\n                        max=\"48\"\n                        defaultValue={this.state.values.fontsize}\n                        onChange={e => {\n                            const { value } = e.target;\n                            this.fontsize(value, true);\n                        }}\n                    />\n                </li>\n                <li>\n                    <div\n                        className=\"inner\"\n                        onClick={() => {\n                            const { article } = this;\n                            const bool = this.toggleClassName('typewriter');\n\n                            let forward = article.typewriter(bool);\n                            forward = bool === undefined ? !forward : forward;\n                            article.typewriter(forward);\n                        }}>\n                        <strong>Typewriter mode</strong>\n                        <em>{this.getOnOff('typewriter')}</em>\n                    </div>\n                </li>\n                <li>\n                    <div className=\"inner\" onClick={this.readSelected}>\n                        <strong>Read aloud (BETA)</strong>\n                        <em>stop|start</em>\n                    </div>\n                </li>\n            </ul>\n        );\n    }\n}\n\nexport default Settings;\n","import React from 'react';\nimport Parse from '../../utilities/Parse';\nimport u from '../../utilities/';\nimport FileRow from './FileRow';\nimport Settings from './Settings';\nimport divider from '../divider';\n\nconst { read } = u.storage('settings');\nconst html = document.querySelector('html');\n\n// a keypress toggle. 1st press = on, 2nd press = off\n// different platforms have strange quirks with holding down keys + clicking\nwindow.addEventListener('keydown', e => {\n    let method, className;\n    if (e.altKey) {\n        className = 'show-alternative';\n        method = html.classList.contains(className) ? 'remove' : 'add';\n        html.classList[method](className);\n    }\n});\n\nclass Sidebar extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            guid: null,\n            current: null,\n            splitwidth: 50,\n            articles: [],\n        };\n\n        // bind the onAfter event to persit the data\n        props.article.on('after', null, this.saveToDisk.bind(this));\n        props.sentences.on('after', null, this.saveToDisk.bind(this));\n    }\n    saveToDisk() {\n        u.defer(\n            'savearticle',\n            () => {\n                const { article } = this.props;\n                const { current, guid, articles } = this.state;\n                const fs = u.storage(current);\n\n                const children = article.texteditor.children;\n                const data = new Parse(children).toCollection();\n\n                const meta = articles.find(r => r.uuid === current);\n                const payload = { data, meta };\n\n                console.log(\n                    'persit article',\n                    this.state.guid,\n                    this.state.current\n                );\n                console.log('payload', payload);\n\n                //store.write(data);\n                fs.write(payload);\n                fs.updateArticle(guid, current, payload);\n            },\n            1500\n        );\n    }\n    componentDidMount() {\n        // update with persisted data\n        const articles = this.getUpdatedArticles();\n        const { guid = null, current = null, values = null } =\n            read() || this.state;\n        const { splitwidth = 50 } = values || {};\n        const state = { articles, guid, current, splitwidth };\n        this.setState(state);\n\n        // instanate the divider\n        this.mouse = this.props.mouse;\n        this.divider = divider(splitwidth, this.mouse);\n        this.divider.add('wordcount');\n        this.divider.onResize(this.saveDividerWidth);\n\n        // bind the wordcounter events\n        this.props.article.on('wordcounter', null, d =>\n            this.updateWordCount(d)\n        );\n        this.props.sentences.on('wordcounter', null, () =>\n            this.props.article.wordcounter()\n        );\n        this.props.store.setSyncProfile(guid);\n\n        this.registerMouseEvent();\n    }\n\n    updateWordCount(words) {\n        this.divider.update('wordcount', words);\n    }\n\n    saveDividerWidth = value => {\n        u.defer(\n            'splitwidth',\n            () => {\n                console.log('save divider width', value);\n                this.setState({ splitwidth: value });\n            },\n            750\n        );\n    };\n\n    syncWithServer = guid => {\n        if (!guid) {\n            console.warn('Require sync profile id');\n            return;\n        }\n\n        const { purge, restore } = u.backupRestore;\n        const fn = json => {\n            const { status, data } = json;\n            if (status !== 200) {\n                console.error('Nothing to restore', json);\n                return;\n            }\n\n            console.warn('Restoring remote data');\n\n            purge('rewrite');\n            restore('rewrite', data);\n            let { articles, settings } = data;\n            const current = settings.current || null;\n            const { splitwidth = 50 } = settings.values || {};\n\n            let state = { current, splitwidth, articles, guid };\n\n            this.setState(state);\n            this.getArticleByGuid(current);\n            this.props.store.setSyncProfile(guid);\n        };\n\n        return u.storage().pull(guid, fn);\n    };\n\n    getUpdatedArticles() {\n        const { store } = this.props;\n        const articles = store.list();\n        return articles;\n    }\n\n    registerMouseEvent() {\n        const body = document.querySelector('body');\n        const sidebar = document.querySelector('#sidebar');\n        const zone = [3, sidebar.offsetWidth + 50]; // mouse trigger region\n        let showsidebar = body.classList.contains('show-sidebar');\n\n        this.props.mouse(null, 'move', e => {\n            const { pageX } = e;\n            zone[1] = sidebar.offsetWidth + 50;\n            showsidebar = body.classList.contains('show-sidebar');\n\n            if (!showsidebar && pageX > zone[0]) {\n                return;\n            }\n\n            if (pageX > zone[1]) {\n                body.classList.add('sidebar-close');\n                u.defer(\n                    'animate',\n                    () => {\n                        body.classList.remove('sidebar-close');\n                        body.classList.remove('show-sidebar');\n                        html.classList.remove('show-alternative');\n                    },\n                    250\n                );\n            }\n\n            if (pageX < zone[0] || (showsidebar && pageX < zone[1])) {\n                // refresh the articles list\n                this.setState({ articles: this.getUpdatedArticles() });\n                body.classList.add('show-sidebar');\n                u.defer(\n                    'sidebar',\n                    () =>\n                        pageX > zone[1]\n                            ? body.classList.remove('show-sidebar')\n                            : null,\n                    500\n                );\n            }\n        });\n    }\n\n    updateCurrent = current => {\n        let settings = this.state;\n        settings.current = current;\n\n        this.setState(settings);\n\n        const body = document.querySelector('body');\n        body.classList.add('sidebar-close');\n\n        u.defer(\n            'animate',\n            () => {\n                body.classList.remove('sidebar-close');\n                body.classList.remove('show-sidebar');\n            },\n            350\n        );\n    };\n\n    getArticleByGuid = guid => {\n        const { store, article } = this.props;\n        const fileObj = store.read(guid);\n        const { data } = fileObj;\n        article.setWordTarget(fileObj.wordtarget);\n        return article.reset(data);\n    };\n\n    handleWordTarget(e, wordtarget = 0, article_id) {\n        e.preventDefault();\n        e.stopPropagation();\n        const el = e.target;\n        const data = u.storage(article_id);\n        const article = data.read();\n        const value = u.prompt(\n            'Enter a word count target for this document.',\n            wordtarget\n        );\n\n        article.meta.wordtarget = Number(value) || 0;\n        data.write(article);\n        data.update(article);\n        el.innerHTML = `Target ${value || ': add'}`;\n    }\n    getArticles() {\n        const { current = null, articles = [] } = this.state;\n        const { store } = this.props;\n        let callbacks = {\n            getArticleByGuid: this.getArticleByGuid,\n            updateCurrent: this.updateCurrent,\n            handleDelete: this.handleDelete,\n            handleWordTarget: this.handleWordTarget,\n            store,\n            downloadText: this.download('text'),\n            downloadJson: this.download('json'),\n        };\n\n        const files = articles.map(obj => {\n            const key = obj.guid || obj.uuid;\n            const selected = key === current ? 'selected' : '';\n\n            return (\n                <li key={key} className={selected}>\n                    <FileRow object={obj} callbacks={callbacks} />\n                </li>\n            );\n        });\n\n        return (\n            <div id=\"files\">\n                <hr />\n                <ul>{files}</ul>\n            </div>\n        );\n    }\n\n    handleDelete(guid) {\n        const { store } = this.props;\n        const msg = 'You are about to delete this file.\\nAre you sure?';\n        if (!window.confirm(msg)) return false;\n\n        store.delete(guid);\n        const articles = store.list();\n        this.setState({ articles });\n    }\n\n    makeEditable = (e, name, guid) => {\n        e.stopPropagation();\n        const { rename } = this.props.store;\n        console.log(123, name, guid);\n\n        return (\n            <input\n                type=\"text\"\n                defaultValue={name}\n                onBlur={e => rename(guid, e.target.value)}\n                onKeyPress={e => {\n                    e.stopPropagation();\n                    if (/enter/i.test(e.key)) {\n                        e.target.blur();\n                        rename(guid, e.target.value);\n                    }\n                    return true;\n                }}\n            />\n        );\n    };\n\n    handleImport = e => {\n        const { store, article } = this.props;\n        const that = this;\n        store.open(e, function(name, text) {\n            const p = new Parse(text);\n            const current = store.create(null, name, p.toCollection());\n            article.init(current.data);\n            that.setState({ articles: store.list() });\n        });\n    };\n\n    handleDataRestore = e => {\n        const { restore } = u.backupRestore;\n        const { readTextFile } = u;\n        const ns = 'rewrite';\n\n        return readTextFile(e, (name, plaintext) => {\n            const data = JSON.parse(plaintext);\n            const keys = Object.keys(data);\n            const valid = keys.filter(k =>\n                /(articles|previous|settings)$/i.test(k)\n            );\n\n            console.log(valid);\n            // restore if there is data integrity\n            if (!valid.length === 3) {\n                console.error('Restore failed integrity check', data);\n                return;\n            }\n\n            const contd = u.confirm(\n                'You are about to overwrite existing data.\\nAre you sure?'\n            );\n            if (!contd) return;\n\n            Object.keys(localStorage).forEach(k =>\n                k.indexOf() + 1 ? delete localStorage[k] : null\n            );\n            return restore(ns, data);\n        });\n    };\n\n    download = (mime = 'text') => {\n        const method =\n            {\n                text: 'toText',\n                markdown: 'toMarkdown',\n                json: 'toCollection',\n            }[mime] || 'text';\n        const { state } = this;\n        const { props } = this;\n\n        return e => {\n            e.preventDefault();\n            e.stopPropagation();\n\n            const saveAs = e.altKey ? true : false;\n            const { current } = state;\n            const fs = u.storage(current);\n\n            let { data, meta } = fs.read(current);\n            let { name, uuid } = meta;\n            const date = new Date()\n                .toISOString()\n                .replace(/:\\d+.\\d+.$/, '')\n                .replace('T', ' ');\n\n            // pressing a ket modifier presents the save-as prompt\n            const filename = saveAs\n                ? u.prompt(`Enter filename`, `${name}-${date}`)\n                : name;\n            if (!name || !name.trim()) {\n                console.log('No file name', current, uuid, name, data);\n                return;\n            }\n\n            const p = new Parse(data);\n            const object = {\n                name: filename,\n                id: uuid,\n                data: p[method](),\n                type: mime,\n                appendId: false,\n            };\n            return u.download(object);\n        };\n    };\n\n    render() {\n        const articleList = this.getArticles();\n        return (\n            <div>\n                <ul className=\"actions\">\n                    <li>\n                        <div\n                            className=\"inner\"\n                            onClick={() => {\n                                this.props.store.create(null, 'Untitled', [{}]);\n                                this.props.article.init([{}]);\n                                return;\n                            }}>\n                            New\n                        </div>\n                    </li>\n                    <li>\n                        <label htmlFor=\"uploadInput\" className=\"inner\">\n                            <span>Open</span>\n                            <input\n                                id=\"uploadInput\"\n                                className=\"hidden\"\n                                onChange={this.handleImport}\n                                type=\"file\"\n                                accept=\"text/*\"\n                            />\n                        </label>\n                    </li>\n                    <li>\n                        <div className=\"inner\" onClick={this.download('text')}>\n                            <span>\n                                Save <i className=\"on-alternative-inline\">As</i>\n                            </span>\n                        </div>\n                    </li>\n                    <div className=\"on-alternative\">\n                        <li>\n                            <div\n                                className=\"inner\"\n                                onClick={() => {\n                                    const { download, backupRestore } = u;\n                                    const { backup } = backupRestore;\n\n                                    const data = backup('rewrite');\n                                    const meta = {\n                                        name: 'rewriting-backup',\n                                        id: new Date().toISOString(),\n                                        data,\n                                    };\n                                    return download(meta);\n                                }}>\n                                <span>Backup</span>\n                            </div>\n                        </li>\n                        <li>\n                            <label htmlFor=\"restoreData\" className=\"inner\">\n                                <span>Restore</span>\n                                <input\n                                    id=\"restoreData\"\n                                    className=\"hidden\"\n                                    onChange={this.handleDataRestore}\n                                    type=\"file\"\n                                    accept=\"text/json\"\n                                />\n                            </label>\n                        </li>\n                        <li>\n                            <div\n                                className=\"inner\"\n                                onClick={() => {\n                                    const guid = u.prompt(\n                                        'Enter your sync id:'\n                                    );\n                                    return this.syncWithServer(guid);\n                                }}>\n                                <span>Sync Profile</span>\n                                <em>{this.state.guid || 'Not syncing'}</em>\n                            </div>\n                        </li>\n                    </div>\n                </ul>\n                {articleList}\n                <Settings\n                    article={this.props.article}\n                    guid={this.state.guid}\n                    current={this.state.current}\n                    splitwidth={this.state.splitwidth}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;\n","import u from './utilities/';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Article from './modules/Article';\nimport Sentences from './modules/Sentences';\nimport Storage from './modules/Storage/';\nimport Parse from './utilities/Parse';\nimport Sidebar from './modules/Sidebar/';\n\nimport './styles.scss';\n\nconst mouseEvents = {\n    up: [],\n    move: [],\n};\n\nfunction mouse(e, method, fn) {\n    if (fn) return mouseEvents[method].push(fn);\n    mouseEvents[method].forEach(callback => callback(e));\n}\n\nwindow.onmouseup = e => mouse(e, 'up');\nwindow.onmousemove = e => mouse(e, 'move');\n\nconst store = new Storage(u.storage.bind(window));\nconst article = new Article('c1', { prefix: 'a', hidden: true });\nconst sentences = new Sentences('c2', { prefix: 's', hidden: true });\n\narticle.bindTo(sentences);\nsentences.bindTo(article);\n\nwindow.RE = {\n    storage: store,\n    article: article,\n};\n\n(function() {\n    setTimeout(() => {\n        document.querySelector('.container').classList.remove('hidden');\n        document.querySelector('.sidebar').classList.remove('hidden');\n        document.querySelector('.overlay').classList.add('hidden');\n\n        // init delay required for scrollIntoViewIfNeeded()\n        const articleText = store.initilize();\n        article.init((articleText && articleText.data) || ['']);\n    }, 1950);\n})();\n\n// Sidebar is a React component\nconst sidebar = document.querySelector('#sidebar');\nReactDOM.render(\n    <Sidebar\n        store={store}\n        article={article}\n        sentences={sentences}\n        mouse={mouse}\n    />,\n    sidebar\n);\n\n// Use react to prevent start-up lag\nconst overlay = document.querySelector('#overlay');\nReactDOM.render(\n    <div className=\"brand\">\n        <img src=\"./static/images/rewriting.svg\" alt=\"writing is rewriting\" />\n    </div>,\n    overlay\n);\n"],"sourceRoot":""}